{"version":3,"sources":["webpack:///./src/app/entities/account/account.route.ts","webpack:///./src/app/entities/account/index.ts","webpack:///./src/app/entities/account/personal-setting/personal-setting-bootstrap.component.html","webpack:///./src/app/entities/account/personal-setting/personal-setting.component.scss","webpack:///./src/app/entities/account/personal-setting/personal-setting.component.ts","webpack:///./src/app/entities/address/address.model.ts","webpack:///./src/app/entities/address/address.service.ts","webpack:///./src/app/entities/address/city.model.ts","webpack:///./src/app/entities/address/city.service.ts","webpack:///./src/app/entities/address/country.model.ts","webpack:///./src/app/entities/address/country.service.ts","webpack:///./src/app/entities/address/district.model.ts","webpack:///./src/app/entities/address/district.service.ts","webpack:///./src/app/entities/address/index.ts","webpack:///./src/app/entities/address/ward.model.ts","webpack:///./src/app/entities/address/ward.service.ts","webpack:///./src/app/entities/home/dashboard/dashboard.component.html","webpack:///./src/app/entities/home/dashboard/dashboard.component.scss","webpack:///./src/app/entities/home/dashboard/dashboard.component.ts","webpack:///./src/app/entities/home/home.route.ts","webpack:///./src/app/entities/role/index.ts","webpack:///./src/app/entities/role/role-delete-dialog/role-delete-dialog.component.html","webpack:///./src/app/entities/role/role-delete-dialog/role-delete-dialog.component.scss","webpack:///./src/app/entities/role/role-delete-dialog/role-delete-dialog.component.ts","webpack:///./src/app/entities/role/role-list/role-list-search.ts","webpack:///./src/app/entities/role/role-list/role-list.component.html","webpack:///./src/app/entities/role/role-list/role-list.component.scss","webpack:///./src/app/entities/role/role-list/role-list.component.ts","webpack:///./src/app/entities/role/role-update/role-update.component.html","webpack:///./src/app/entities/role/role-update/role-update.component.scss","webpack:///./src/app/entities/role/role-update/role-update.component.ts","webpack:///./src/app/entities/role/role.route.ts","webpack:///./src/app/entities/role/role.service.ts","webpack:///./src/app/entities/role/role.ts","webpack:///./src/app/entities/user/index.ts","webpack:///./src/app/entities/user/user-delete-dialog/user-delete-dialog.component.html","webpack:///./src/app/entities/user/user-delete-dialog/user-delete-dialog.component.ts","webpack:///./src/app/entities/user/user-list/user-list.component.html","webpack:///./src/app/entities/user/user-list/user-list.component.ts","webpack:///./src/app/entities/user/user-update/user-update.component.html","webpack:///./src/app/entities/user/user-update/user-update.component.ts","webpack:///./src/app/entities/user/user.model.ts","webpack:///./src/app/entities/user/user.route.ts","webpack:///./src/app/entities/user/user.service.ts"],"names":[],"mappings":"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","file":"default~admin-admin-module~guest-guest-module.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { Resolve, Routes } from '@angular/router';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { IAccount } from '../../core';\r\nimport { AccountService } from '../../core';\r\nimport { PersonalSettingComponent } from './personal-setting/personal-setting.component';\r\nimport { EMPTY, of } from 'rxjs';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class PersonalSettingResolve implements Resolve<IAccount> {\r\n  constructor(private service: AccountService) {}\r\n\r\n  resolve() {\r\n    if (environment.design) {\r\n      return of({});\r\n    }\r\n    return this.service.get().pipe(\r\n      map((account: HttpResponse<IAccount>) => account.body),\r\n      catchError(err => {\r\n        return EMPTY;\r\n      })\r\n    );\r\n  }\r\n}\r\n\r\nexport const accountRoutes: Routes = [\r\n  {\r\n    path: 'profile',\r\n    component: PersonalSettingComponent,\r\n    resolve: {\r\n      account: PersonalSettingResolve,\r\n    },\r\n    data: {\r\n      authorities: ['can_change_profile', 'can_change_password'],\r\n      pageTitle: 'Cài đặt tài khoản'\r\n    },\r\n  }\r\n];\r\n","export * from './account.route';\r\nexport * from './personal-setting/personal-setting.component';\r\n","module.exports = \"<section class=\\\"grid-container\\\">\\r\\n  <h1 class=\\\"mat-h1\\\">Cài đặt cá nhân</h1>\\r\\n\\r\\n  <div class=\\\"row-container row-center\\\">\\r\\n    <div class=\\\"col col-6\\\">\\r\\n      <form class=\\\"form-container\\\" name=\\\"editForm\\\" role=\\\"form\\\" novalidate (ngSubmit)=\\\"saveInfo()\\\" #editForm=\\\"ngForm\\\" *appHasAnyAuthority=\\\"'user_change_profile'\\\">\\r\\n        <mat-form-field>\\r\\n          <input matInput name=\\\"lastName\\\" placeholder=\\\"Họ\\\" [(ngModel)]=\\\"account.last_name\\\">\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field>\\r\\n          <input matInput name=\\\"fisrtName\\\" placeholder=\\\"Tên\\\" [(ngModel)]=\\\"account.first_name\\\">\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field>\\r\\n          <input matInput name=\\\"birthday\\\" [matDatepicker]=\\\"picker6\\\" placeholder=\\\"Ngày sinh\\\" [(ngModel)]=\\\"account.birthday\\\">\\r\\n          <mat-datepicker-toggle [for]=\\\"picker6\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker #picker6></mat-datepicker>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field>\\r\\n          <input matInput name=\\\"phone\\\" placeholder=\\\"Số điện thoại\\\" [(ngModel)]=\\\"account.phone\\\">\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field>\\r\\n          <input matInput name=\\\"email\\\" placeholder=\\\"Email\\\" [(ngModel)]=\\\"account.email\\\">\\r\\n        </mat-form-field>\\r\\n\\r\\n        <div class=\\\"form-button-row center\\\">\\r\\n          <button mat-flat-button color=\\\"primary\\\"><mat-icon>save</mat-icon> Lưu</button>\\r\\n        </div>\\r\\n      </form>\\r\\n\\r\\n      <form class=\\\"form-container\\\" name=\\\"passForm\\\" role=\\\"form\\\" novalidate (ngSubmit)=\\\"savePassword()\\\" #passForm=\\\"ngForm\\\" *appHasAnyAuthority=\\\"'user_change_password'\\\">\\r\\n        <mat-form-field>\\r\\n          <input matInput type=\\\"password\\\" name=\\\"currentPassword\\\" placeholder=\\\"Mật khẩu hiện tại\\\" [(ngModel)]=\\\"passwordChange.current_password\\\">\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field>\\r\\n          <input matInput type=\\\"password\\\" name=\\\"newPassword\\\" placeholder=\\\"Mật khẩu\\\" [(ngModel)]=\\\"passwordChange.password\\\">\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field>\\r\\n          <input matInput type=\\\"password\\\" name=\\\"confirmPassword\\\" placeholder=\\\"Xác nhận mật khẩu\\\" [(ngModel)]=\\\"passwordChange.password_confirmation\\\">\\r\\n        </mat-form-field>\\r\\n\\r\\n        <div class=\\\"form-button-row center\\\">\\r\\n          <button mat-flat-button color=\\\"primary\\\" [disabled]=\\\"!passwordChange.current_password || !isConfirmPasswordMatched()\\\"><mat-icon>save</mat-icon> Đổi mật khẩu</button>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</section>\\r\\n\"","module.exports = \".input-title {\\n  width: 332px;\\n  color: #008DFF;\\n  font-size: 16px;\\n  font-weight: bold;\\n  font-family: Segoe UI, sans-serif; }\\n\\n.input-setting {\\n  border-radius: 5px;\\n  height: 36px;\\n  color: #333;\\n  border: 1px solid #f1f1f1;\\n  padding-left: 10px;\\n  font-size: 16px;\\n  width: 332px; }\\n\\n.div-input {\\n  padding-top: 15px;\\n  width: 332px; }\\n\\n::-moz-placeholder {\\n  /* Chrome, Firefox, Opera, Safari 10.1+ */\\n  color: #cecece;\\n  opacity: 1;\\n  /* Firefox */ }\\n\\n::placeholder {\\n  /* Chrome, Firefox, Opera, Safari 10.1+ */\\n  color: #cecece;\\n  opacity: 1;\\n  /* Firefox */ }\\n\\n:-ms-input-placeholder {\\n  /* Internet Explorer 10-11 */\\n  color: #cecece; }\\n\\n::-ms-input-placeholder {\\n  /* Microsoft Edge */\\n  color: #cecece; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZW50aXRpZXMvYWNjb3VudC9wZXJzb25hbC1zZXR0aW5nL0U6XFxqb2JzXFxhbmd1bGFyMi13ZWIvc3JjXFxhcHBcXGVudGl0aWVzXFxhY2NvdW50XFxwZXJzb25hbC1zZXR0aW5nXFxwZXJzb25hbC1zZXR0aW5nLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksWUFBWTtFQUNaLGNBQWM7RUFDZCxlQUFlO0VBQ2YsaUJBQWlCO0VBQ2pCLGlDQUFpQyxFQUFBOztBQUVyQztFQUNJLGtCQUFrQjtFQUNsQixZQUFZO0VBQ1osV0FBVztFQUNYLHlCQUF5QjtFQUN6QixrQkFBa0I7RUFDbEIsZUFBZTtFQUNmLFlBQVksRUFBQTs7QUFHaEI7RUFDSSxpQkFBaUI7RUFDakIsWUFBWSxFQUFBOztBQUdoQjtFQUFnQix5Q0FBQTtFQUNaLGNBQWM7RUFDZCxVQUFVO0VBQUUsWUFBQSxFQUFhOztBQUY3QjtFQUFnQix5Q0FBQTtFQUNaLGNBQWM7RUFDZCxVQUFVO0VBQUUsWUFBQSxFQUFhOztBQUczQjtFQUF5Qiw0QkFBQTtFQUN2QixjQUFjLEVBQUE7O0FBR2hCO0VBQTBCLG1CQUFBO0VBQ3hCLGNBQWMsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2VudGl0aWVzL2FjY291bnQvcGVyc29uYWwtc2V0dGluZy9wZXJzb25hbC1zZXR0aW5nLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmlucHV0LXRpdGxlIHtcclxuICAgIHdpZHRoOiAzMzJweDtcclxuICAgIGNvbG9yOiAjMDA4REZGO1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICBmb250LWZhbWlseTogU2Vnb2UgVUksIHNhbnMtc2VyaWY7XHJcbn1cclxuLmlucHV0LXNldHRpbmcge1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgaGVpZ2h0OiAzNnB4O1xyXG4gICAgY29sb3I6ICMzMzM7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjZjFmMWYxO1xyXG4gICAgcGFkZGluZy1sZWZ0OiAxMHB4O1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgd2lkdGg6IDMzMnB4O1xyXG59XHJcblxyXG4uZGl2LWlucHV0IHtcclxuICAgIHBhZGRpbmctdG9wOiAxNXB4O1xyXG4gICAgd2lkdGg6IDMzMnB4O1xyXG59XHJcblxyXG46OnBsYWNlaG9sZGVyIHsgLyogQ2hyb21lLCBGaXJlZm94LCBPcGVyYSwgU2FmYXJpIDEwLjErICovXHJcbiAgICBjb2xvcjogI2NlY2VjZTtcclxuICAgIG9wYWNpdHk6IDE7IC8qIEZpcmVmb3ggKi9cclxuICB9XHJcbiAgXHJcbiAgOi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7IC8qIEludGVybmV0IEV4cGxvcmVyIDEwLTExICovXHJcbiAgICBjb2xvcjogI2NlY2VjZTtcclxuICB9XHJcbiAgXHJcbiAgOjotbXMtaW5wdXQtcGxhY2Vob2xkZXIgeyAvKiBNaWNyb3NvZnQgRWRnZSAqL1xyXG4gICAgY29sb3I6ICNjZWNlY2U7XHJcbiAgfVxyXG4iXX0= */\"","import {AfterViewInit, Component, OnInit} from '@angular/core';\r\nimport {HttpErrorResponse} from '@angular/common/http';\r\nimport {Title} from '@angular/platform-browser';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {JhiAlertService} from 'ng-jhipster';\r\nimport {forkJoin, Observable} from 'rxjs';\r\nimport {Account, AccountService, IAccount, Principal} from '../../../core';\r\nimport {IPasswordChange, PasswordChange} from '../../../shared';\r\nimport {UserService} from '../../user/user.service';\r\nimport * as moment from 'moment';\r\nimport {FormBuilder, FormGroup} from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-personal-setting',\r\n  templateUrl: './personal-setting-bootstrap.component.html',\r\n  styleUrls: ['./personal-setting.component.scss']\r\n})\r\nexport class PersonalSettingComponent implements OnInit, AfterViewInit {\r\n  account: IAccount;\r\n  account_update: any;\r\n  passwordChange: IPasswordChange;\r\n  isSaving: boolean;\r\n  isSavingPass: boolean;\r\n\r\n  public imagePath;\r\n  envent: any;\r\n  imgURL: any;\r\n  public message: string;\r\n  uploadForm: FormGroup;\r\n  // top: TopbarComponent;\r\n\r\n  constructor(\r\n    private accountService: AccountService,\r\n    private userService: UserService,\r\n    private alertService: JhiAlertService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private titleService: Title,\r\n    private principal: Principal,\r\n    private formBuilder: FormBuilder,\r\n  ) {\r\n    this.passwordChange = new PasswordChange();\r\n    this.account = new Account();\r\n    this.uploadForm = this.formBuilder.group({\r\n      name: [''],\r\n      avatar: [null]\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.data.subscribe(({account}) => {\r\n      if (account.birthday) {\r\n        account.birthday = account.birthday != null ? moment(account.birthday).format('DD-MM-YYYY') : null;\r\n      }\r\n      if (account) {\r\n        this.account = account;\r\n        this.imgURL = this.account.imageUrl;\r\n      }\r\n    });\r\n    console.log(this.imgURL);\r\n    if (this.imgURL == null) {\r\n      this.imgURL = 'assets/images/img-user.png';\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n  }\r\n  preview(envent, files) {\r\n    this.envent = envent;\r\n    if (files.length === 0) {\r\n      return;\r\n    }\r\n    const mimeType = files[0].type;\r\n    if (mimeType.match(/image\\/*/) == null) {\r\n      this.message = 'Only images are supported.';\r\n      return;\r\n    }\r\n\r\n    const reader = new FileReader();\r\n    this.imagePath = files;\r\n    reader.readAsDataURL(files[0]);\r\n    reader.onload = (_event) => {\r\n      this.imgURL = reader.result;\r\n    };\r\n  }\r\n  isCurrentPasswordRequired(): boolean {\r\n    return (this.passwordChange.newPassword !== null && this.passwordChange.newPassword !== '');\r\n  }\r\n\r\n  isNewPasswordRequired(): boolean {\r\n    return this.passwordChange.currentPassword !== null && this.passwordChange.currentPassword !== '';\r\n  }\r\n\r\n  isConfirmPasswordRequired(): boolean {\r\n    return (this.passwordChange.currentPassword !== null && this.passwordChange.currentPassword !== '')\r\n      || (this.passwordChange.newPassword !== null && this.passwordChange.newPassword !== '');\r\n  }\r\n\r\n  isConfirmPasswordMatched(): boolean {\r\n    return (this.passwordChange.newPassword !== undefined\r\n      && this.passwordChange.newPassword !== null\r\n      && this.passwordChange.newPassword !== '')\r\n      && (this.passwordChange.newPassword === this.passwordChange.confirmPassword);\r\n  }\r\n\r\n  private onSaveSuccess(msg: string) {\r\n    this.alertService.success(msg, null, null);\r\n  }\r\n\r\n  private onSaveError(msg: string) {\r\n    this.alertService.error(msg, null, null);\r\n  }\r\n\r\n  refresh(): void {\r\n    window.location.reload();\r\n  }\r\n\r\n  private subscribeToSaveResponse(result: Observable<any[]>) {\r\n    result.subscribe(([accountHttpResponse]) =>\r\n        setTimeout(() => {\r\n          this.isSaving = false;\r\n          // this.onSaveSuccess('Success to save your\\'re information!');\r\n        }, 0)\r\n      ,\r\n      (error: HttpErrorResponse) =>\r\n        setTimeout(() => {\r\n          this.isSaving = false;\r\n          // this.onSaveError(error.error.title);\r\n        }, 0)\r\n    );\r\n  }\r\n  // uploadFile(event) {\r\n  //   const file = (event.target as HTMLInputElement).files[0];\r\n  //   this.uploadForm.patchValue({\r\n  //     avatar: this.imagePath\r\n  //   });\r\n  //   this.uploadForm.get('avatar').updateValueAndValidity()\r\n  // }\r\n\r\n  updload_avatar(event) {\r\n    const file = (event.target as HTMLInputElement).files[0];\r\n    this.uploadForm = this.formBuilder.group({\r\n      images: file\r\n    });\r\n    const formData = new FormData();\r\n    formData.append('images', this.uploadForm.get('images').value);\r\n    this.accountService.upload(formData, this.account.id).subscribe(\r\n      (res) => {\r\n        this.account.imageUrl = 'http://s3.aquaman.aztrace.vn/upload/' + res;\r\n      },\r\n      (err) => console.log(err)\r\n    );\r\n  }\r\n  saveInfo() {\r\n    if (this.account.imageUrl !== this.imgURL && this.envent !== undefined) {\r\n      console.log(this.envent);\r\n      this.updload_avatar(this.envent);\r\n    }\r\n\r\n    this.isSaving = true;\r\n  }\r\n\r\n  savePassword() {\r\n\r\n  }\r\n\r\n  private onSavePassSuccess(response: any) {\r\n    this.isSavingPass = false;\r\n    this.alertService.success('Success to save your\\'re information!', null, 'right');\r\n  }\r\n\r\n  private onSavePassError() {\r\n    this.isSavingPass = false;\r\n  }\r\n\r\n  private fetchData() {\r\n    this.ngOnInit();\r\n  }\r\n}\r\n","export interface IAddress {\r\n    id?: number;\r\n    name?: string;\r\n    countryId?: number;\r\n    cityId?: number;\r\n    wardId?: number;\r\n    districtId?: number;\r\n    countryName?: string;\r\n    cityName?: string;\r\n    districtName?: string;\r\n    wardName?: string;\r\n}\r\n\r\nexport class Address implements IAddress {\r\n    constructor(\r\n        public id?: number,\r\n        public name?: string,\r\n        public countryId?: number,\r\n        public cityId?: number,\r\n        public wardId?: number,\r\n        public districtId?: number,\r\n        public countryName?: string,\r\n        public cityName?: string,\r\n        public districtName?: string,\r\n        public wardName?: string,\r\n    ) {\r\n        this.id = id ? id : null;\r\n        this.name = name ? name : null;\r\n        this.countryId = countryId ? countryId : null;\r\n        this.cityId = cityId ? cityId : null;\r\n        this.wardId = wardId ? wardId : null;\r\n        this.districtId = districtId ? districtId : null;\r\n        this.countryName = countryName ? countryName : null;\r\n        this.cityName = cityName ? cityName : null;\r\n        this.districtName = districtName ? districtName : null;\r\n        this.wardName = wardName ? wardName : null;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { IAddress } from './address.model';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\n\r\ninterface Page {\r\n  data: IAddress[];\r\n}\r\n\r\ntype EntityType = IAddress;\r\ntype EntityResponseType = HttpResponse<EntityType>;\r\ntype EntityListResponseType = HttpResponse<EntityType[]>;\r\ntype EntityPageResponseType = HttpResponse<Page>;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AddressService {\r\n  private resourceUrl = '/api/addresses';\r\n  constructor(private http: HttpClient) { }\r\n\r\n  create(entity: EntityType): Observable<EntityResponseType> {\r\n    const copy = this.convertEntityFromClient(entity);\r\n    return this.http.post<EntityType>(this.resourceUrl, copy, {observe: 'response'})\r\n      .pipe(map((res: EntityResponseType) => this.convertEntityFromServer(res)));\r\n  }\r\n\r\n  update(entity: EntityType): Observable<EntityResponseType> {\r\n    const copy = this.convertEntityFromClient(entity);\r\n    return this.http.put<EntityType>(this.resourceUrl, copy, {observe: 'response'})\r\n      .pipe(map((res: EntityResponseType) => this.convertEntityFromServer(res)));\r\n  }\r\n\r\n  find(login: string): Observable<EntityResponseType> {\r\n    return this.http.get<EntityType>(`${this.resourceUrl}/${login}`, {observe: 'response'})\r\n      .pipe(map((res: EntityResponseType) => this.convertEntityFromServer(res)));\r\n  }\r\n\r\n  query(req?: any): Observable<EntityPageResponseType> {\r\n    return this.http\r\n      .get<Page>(this.resourceUrl, {params: req, observe: 'response'})\r\n      .pipe(map((res: EntityPageResponseType) => this.convertPageServer(res)));\r\n  }\r\n\r\n  delete(login: string): Observable<EntityResponseType> {\r\n    return this.http.delete(`${this.resourceUrl}/${login}`, {observe: 'response'});\r\n  }\r\n\r\n  list(req?: any): Observable<EntityListResponseType> {\r\n    return this.http\r\n      .get<EntityType[]>(`${this.resourceUrl}`, {params: req, observe: 'response'})\r\n      .pipe(map((res: EntityListResponseType) => this.convertListServer(res)));\r\n  }\r\n\r\n  options(req?: any): Observable<EntityListResponseType> {\r\n    return this.http\r\n      .get<EntityType[]>(`${this.resourceUrl}/option`, {params: req, observe: 'response'})\r\n      .pipe(map((res: EntityListResponseType) => this.convertListServer(res)));\r\n  }\r\n\r\n  private convertEntityFromClient(entity: EntityType): EntityType {\r\n    const res: EntityType = Object.assign({}, entity, {\r\n    });\r\n    return res;\r\n  }\r\n\r\n  private convertEntityFromServer(res: EntityResponseType): EntityResponseType {\r\n    return res;\r\n  }\r\n\r\n  private convertListServer(res: EntityListResponseType): EntityListResponseType {\r\n    return res;\r\n  }\r\n\r\n  private convertPageServer(res: EntityPageResponseType): EntityPageResponseType {\r\n    return res;\r\n  }\r\n}\r\n","export interface ICity {\r\n    id?: number;\r\n    name?: string;\r\n    countryId?: number;\r\n}\r\n\r\nexport class City implements ICity {\r\n    constructor(\r\n        public id?: number,\r\n        public name?: string,\r\n        public countryId?: number,\r\n    ) {\r\n        this.id = id ? id : null;\r\n        this.name = name ? name : null;\r\n        this.countryId = countryId ? countryId : null;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ICity } from './city.model';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\n\r\ninterface Page {\r\n  data: ICity[];\r\n}\r\n\r\ntype EntityType = ICity;\r\ntype EntityResponseType = HttpResponse<EntityType>;\r\ntype EntityListResponseType = HttpResponse<EntityType[]>;\r\ntype EntityPageResponseType = HttpResponse<Page>;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CityService {\r\n  private resourceUrl = '/api/cities';\r\n  constructor(private http: HttpClient) { }\r\n\r\n  create(entity: EntityType): Observable<EntityResponseType> {\r\n    const copy = this.convertEntityFromClient(entity);\r\n    return this.http.post<EntityType>(this.resourceUrl, copy, {observe: 'response'})\r\n      .pipe(map((res: EntityResponseType) => this.convertEntityFromServer(res)));\r\n  }\r\n\r\n  update(entity: EntityType): Observable<EntityResponseType> {\r\n    const copy = this.convertEntityFromClient(entity);\r\n    return this.http.put<EntityType>(this.resourceUrl, copy, {observe: 'response'})\r\n      .pipe(map((res: EntityResponseType) => this.convertEntityFromServer(res)));\r\n  }\r\n\r\n  find(login: string): Observable<EntityResponseType> {\r\n    return this.http.get<EntityType>(`${this.resourceUrl}/${login}`, {observe: 'response'})\r\n      .pipe(map((res: EntityResponseType) => this.convertEntityFromServer(res)));\r\n  }\r\n\r\n  query(req?: any): Observable<EntityPageResponseType> {\r\n    return this.http\r\n      .get<Page>(this.resourceUrl, {params: req, observe: 'response'})\r\n      .pipe(map((res: EntityPageResponseType) => this.convertPageServer(res)));\r\n  }\r\n\r\n  delete(login: string): Observable<EntityResponseType> {\r\n    return this.http.delete(`${this.resourceUrl}/${login}`, {observe: 'response'});\r\n  }\r\n\r\n  list(req?: any): Observable<EntityListResponseType> {\r\n    return this.http\r\n      .get<EntityType[]>(`${this.resourceUrl}`, {params: req, observe: 'response'})\r\n      .pipe(map((res: EntityListResponseType) => this.convertListServer(res)));\r\n  }\r\n\r\n  options(req?: any): Observable<EntityListResponseType> {\r\n    return this.http\r\n      .get<EntityType[]>(`${this.resourceUrl}/option`, {params: req, observe: 'response'})\r\n      .pipe(map((res: EntityListResponseType) => this.convertListServer(res)));\r\n  }\r\n\r\n  private convertEntityFromClient(entity: EntityType): EntityType {\r\n    const res: EntityType = Object.assign({}, entity, {\r\n    });\r\n    return res;\r\n  }\r\n\r\n  private convertEntityFromServer(res: EntityResponseType): EntityResponseType {\r\n    return res;\r\n  }\r\n\r\n  private convertListServer(res: EntityListResponseType): EntityListResponseType {\r\n    return res;\r\n  }\r\n\r\n  private convertPageServer(res: EntityPageResponseType): EntityPageResponseType {\r\n    return res;\r\n  }\r\n}\r\n","export interface ICountry {\r\n    id?: number;\r\n    name?: string;\r\n}\r\n\r\nexport class Country implements ICountry {\r\n    constructor(\r\n        public id?: number,\r\n        public name?: string,\r\n    ) {\r\n        this.id = id ? id : null;\r\n        this.name = name ? name : null;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ICountry } from './country.model';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\n\r\ninterface Page {\r\n  data: ICountry[];\r\n}\r\n\r\ntype EntityType = ICountry;\r\ntype EntityResponseType = HttpResponse<EntityType>;\r\ntype EntityListResponseType = HttpResponse<EntityType[]>;\r\ntype EntityPageResponseType = HttpResponse<Page>;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CountryService {\r\n  private resourceUrl = '/api/countries';\r\n  constructor(private http: HttpClient) { }\r\n\r\n  create(entity: EntityType): Observable<EntityResponseType> {\r\n    const copy = this.convertEntityFromClient(entity);\r\n    return this.http.post<EntityType>(this.resourceUrl, copy, {observe: 'response'})\r\n      .pipe(map((res: EntityResponseType) => this.convertEntityFromServer(res)));\r\n  }\r\n\r\n  update(entity: EntityType): Observable<EntityResponseType> {\r\n    const copy = this.convertEntityFromClient(entity);\r\n    return this.http.put<EntityType>(this.resourceUrl, copy, {observe: 'response'})\r\n      .pipe(map((res: EntityResponseType) => this.convertEntityFromServer(res)));\r\n  }\r\n\r\n  find(id: string): Observable<EntityResponseType> {\r\n    return this.http.get<EntityType>(`${this.resourceUrl}/${id}`, {observe: 'response'})\r\n      .pipe(map((res: EntityResponseType) => this.convertEntityFromServer(res)));\r\n  }\r\n\r\n  query(req?: any): Observable<EntityPageResponseType> {\r\n    return this.http\r\n      .get<Page>(this.resourceUrl, {params: req, observe: 'response'})\r\n      .pipe(map((res: EntityPageResponseType) => this.convertPageServer(res)));\r\n  }\r\n\r\n  delete(login: string): Observable<EntityResponseType> {\r\n    return this.http.delete(`${this.resourceUrl}/${login}`, {observe: 'response'});\r\n  }\r\n\r\n  list(req?: any): Observable<EntityListResponseType> {\r\n    return this.http\r\n      .get<EntityType[]>(`${this.resourceUrl}`, {params: req, observe: 'response'})\r\n      .pipe(map((res: EntityListResponseType) => this.convertListServer(res)));\r\n  }\r\n\r\n  options(req?: any): Observable<EntityListResponseType> {\r\n    return this.http\r\n      .get<EntityType[]>(`${this.resourceUrl}/option`, {params: req, observe: 'response'})\r\n      .pipe(map((res: EntityListResponseType) => this.convertListServer(res)));\r\n  }\r\n\r\n  private convertEntityFromClient(entity: EntityType): EntityType {\r\n    const res: EntityType = Object.assign({}, entity, {\r\n    });\r\n    return res;\r\n  }\r\n\r\n  private convertEntityFromServer(res: EntityResponseType): EntityResponseType {\r\n    return res;\r\n  }\r\n\r\n  private convertListServer(res: EntityListResponseType): EntityListResponseType {\r\n    return res;\r\n  }\r\n\r\n  private convertPageServer(res: EntityPageResponseType): EntityPageResponseType {\r\n    return res;\r\n  }\r\n}\r\n","export interface IDistrict {\r\n    id?: number;\r\n    name?: string;\r\n    cityId?: number;\r\n}\r\n\r\nexport class District implements IDistrict {\r\n    constructor(\r\n        public id?: number,\r\n        public name?: string,\r\n        public cityId?: number,\r\n    ) {\r\n        this.id = id ? id : null;\r\n        this.name = name ? name : null;\r\n        this.cityId = cityId ? cityId : null;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { IDistrict } from './district.model';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\n\r\ninterface Page {\r\n  data: IDistrict[];\r\n}\r\n\r\ntype EntityType = IDistrict;\r\ntype EntityResponseType = HttpResponse<EntityType>;\r\ntype EntityListResponseType = HttpResponse<EntityType[]>;\r\ntype EntityPageResponseType = HttpResponse<Page>;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DistrictService {\r\n  private resourceUrl = '/api/districts';\r\n  constructor(private http: HttpClient) { }\r\n\r\n  create(entity: EntityType): Observable<EntityResponseType> {\r\n    const copy = this.convertEntityFromClient(entity);\r\n    return this.http.post<EntityType>(this.resourceUrl, copy, {observe: 'response'})\r\n      .pipe(map((res: EntityResponseType) => this.convertEntityFromServer(res)));\r\n  }\r\n\r\n  update(entity: EntityType): Observable<EntityResponseType> {\r\n    const copy = this.convertEntityFromClient(entity);\r\n    return this.http.put<EntityType>(this.resourceUrl, copy, {observe: 'response'})\r\n      .pipe(map((res: EntityResponseType) => this.convertEntityFromServer(res)));\r\n  }\r\n\r\n  find(login: string): Observable<EntityResponseType> {\r\n    return this.http.get<EntityType>(`${this.resourceUrl}/${login}`, {observe: 'response'})\r\n      .pipe(map((res: EntityResponseType) => this.convertEntityFromServer(res)));\r\n  }\r\n\r\n  query(req?: any): Observable<EntityPageResponseType> {\r\n    return this.http\r\n      .get<Page>(this.resourceUrl, {params: req, observe: 'response'})\r\n      .pipe(map((res: EntityPageResponseType) => this.convertPageServer(res)));\r\n  }\r\n\r\n  delete(login: string): Observable<EntityResponseType> {\r\n    return this.http.delete(`${this.resourceUrl}/${login}`, {observe: 'response'});\r\n  }\r\n\r\n  list(req?: any): Observable<EntityListResponseType> {\r\n    return this.http\r\n      .get<EntityType[]>(`${this.resourceUrl}`, {params: req, observe: 'response'})\r\n      .pipe(map((res: EntityListResponseType) => this.convertListServer(res)));\r\n  }\r\n\r\n  options(cityId: number, req?: any): Observable<EntityListResponseType> {\r\n    return this.http\r\n      .get<EntityType[]>(`${this.resourceUrl}/option`, {params: req, observe: 'response'})\r\n      .pipe(map((res: EntityListResponseType) => this.convertListServer(res)));\r\n  }\r\n\r\n  private convertEntityFromClient(entity: EntityType): EntityType {\r\n    const res: EntityType = Object.assign({}, entity, {\r\n    });\r\n    return res;\r\n  }\r\n\r\n  private convertEntityFromServer(res: EntityResponseType): EntityResponseType {\r\n    return res;\r\n  }\r\n\r\n  private convertListServer(res: EntityListResponseType): EntityListResponseType {\r\n    return res;\r\n  }\r\n\r\n  private convertPageServer(res: EntityPageResponseType): EntityPageResponseType {\r\n    return res;\r\n  }\r\n}\r\n","export * from './address.model';\r\nexport * from './city.model';\r\nexport * from './country.model';\r\nexport * from './district.model';\r\nexport * from './ward.model';\r\n\r\nexport * from './address.service';\r\nexport * from './city.service';\r\nexport * from './country.model';\r\nexport * from './district.model';\r\nexport * from './ward.model';\r\n","export interface IWard {\r\n    id?: number;\r\n    name?: string;\r\n    districtId?: number;\r\n}\r\n\r\nexport class Ward implements IWard {\r\n    constructor(\r\n        public id?: number,\r\n        public name?: string,\r\n        public districtId?: number,\r\n    ) {\r\n        this.id = id ? id : null;\r\n        this.name = name ? name : null;\r\n        this.districtId = districtId ? districtId : null;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { IWard } from './ward.model';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\n\r\ninterface Page {\r\n  data: IWard[];\r\n}\r\n\r\ntype EntityType = IWard;\r\ntype EntityResponseType = HttpResponse<EntityType>;\r\ntype EntityListResponseType = HttpResponse<EntityType[]>;\r\ntype EntityPageResponseType = HttpResponse<Page>;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WardService {\r\n  private resourceUrl = '/api/wards';\r\n  constructor(private http: HttpClient) { }\r\n\r\n  create(entity: EntityType): Observable<EntityResponseType> {\r\n    const copy = this.convertEntityFromClient(entity);\r\n    return this.http.post<EntityType>(this.resourceUrl, copy, {observe: 'response'})\r\n      .pipe(map((res: EntityResponseType) => this.convertEntityFromServer(res)));\r\n  }\r\n\r\n  update(entity: EntityType): Observable<EntityResponseType> {\r\n    const copy = this.convertEntityFromClient(entity);\r\n    return this.http.put<EntityType>(this.resourceUrl, copy, {observe: 'response'})\r\n      .pipe(map((res: EntityResponseType) => this.convertEntityFromServer(res)));\r\n  }\r\n\r\n  find(login: string): Observable<EntityResponseType> {\r\n    return this.http.get<EntityType>(`${this.resourceUrl}/${login}`, {observe: 'response'})\r\n      .pipe(map((res: EntityResponseType) => this.convertEntityFromServer(res)));\r\n  }\r\n\r\n  query(req?: any): Observable<EntityPageResponseType> {\r\n    return this.http\r\n      .get<Page>(this.resourceUrl, {params: req, observe: 'response'})\r\n      .pipe(map((res: EntityPageResponseType) => this.convertPageServer(res)));\r\n  }\r\n\r\n  delete(login: string): Observable<EntityResponseType> {\r\n    return this.http.delete(`${this.resourceUrl}/${login}`, {observe: 'response'});\r\n  }\r\n\r\n  list(req?: any): Observable<EntityListResponseType> {\r\n    return this.http\r\n      .get<EntityType[]>(`${this.resourceUrl}`, {params: req, observe: 'response'})\r\n      .pipe(map((res: EntityListResponseType) => this.convertListServer(res)));\r\n  }\r\n\r\n  options(req?: any): Observable<EntityListResponseType> {\r\n    return this.http\r\n      .get<EntityType[]>(`${this.resourceUrl}/option`, {params: req, observe: 'response'})\r\n      .pipe(map((res: EntityListResponseType) => this.convertListServer(res)));\r\n  }\r\n\r\n  private convertEntityFromClient(entity: EntityType): EntityType {\r\n    const res: EntityType = Object.assign({}, entity, {\r\n    });\r\n    return res;\r\n  }\r\n\r\n  private convertEntityFromServer(res: EntityResponseType): EntityResponseType {\r\n    return res;\r\n  }\r\n\r\n  private convertListServer(res: EntityListResponseType): EntityListResponseType {\r\n    return res;\r\n  }\r\n\r\n  private convertPageServer(res: EntityPageResponseType): EntityPageResponseType {\r\n    return res;\r\n  }\r\n}\r\n","module.exports = \"<mat-card>\\r\\n  <mat-card-title>\\r\\n    <h1 id=\\\"user-list-heading\\\" class=\\\"mat-h1\\\">{{'global.dashboard'|translate}}</h1>\\r\\n  </mat-card-title>\\r\\n  <mat-card-content>\\r\\n    \\r\\n  </mat-card-content>\\r\\n</mat-card>\"","module.exports = \".more-button {\\n  position: absolute;\\n  top: 5px;\\n  right: 10px; }\\n\\n.dashboard-card-content {\\n  text-align: center; }\\n\\n/*  */\\n\\n.style-button-block {\\n  text-align: center; }\\n\\n.progress-inner {\\n  padding: .5rem 0; }\\n\\n.progress-inner .value {\\n    margin: 0; }\\n\\n.progress-inner .mat-progress-bar {\\n    height: 10px; }\\n\\n.info-status {\\n  margin-bottom: 1rem; }\\n\\n.info-status .line {\\n    display: flex;\\n    flex-wrap: nowrap; }\\n\\n.info-status .line .col-line {\\n      padding: 5px 10px;\\n      width: 1000px; }\\n\\n.info-status .line .col-line.pumping {\\n        color: #097f0b;\\n        font-size: 14px;\\n        border-radius: 15px; }\\n\\n.info-status .line .col-line.connecting {\\n        background: linear-gradient(90deg, #097f0b 0%, #09790b 35%, #00ff0c 100%);\\n        color: #fff;\\n        text-align: center;\\n        font-size: 14px;\\n        border-radius: 15px;\\n        box-shadow: 1px 1px 1px 0px rgba(134, 134, 134, 0.8); }\\n\\n.info-status .line .col-line.connecting.un {\\n          background: #c6c6c6;\\n          color: #8a8a8a; }\\n\\n.list-pumps {\\n  display: flex;\\n  justify-content: center;\\n  flex-wrap: wrap; }\\n\\n.list-pumps .item-pump {\\n    width: 50%; }\\n\\n.list-pumps .item-pump .pump-inner {\\n      padding: 10px; }\\n\\n.list-pumps .item-pump .pump-inner .pump-title {\\n        border-top-left-radius: 10px;\\n        border-top-right-radius: 10px;\\n        font-size: 1rem;\\n        padding: 10px;\\n        background-color: #eee;\\n        margin: 0; }\\n\\n.list-pumps .item-pump .pump-inner .pump-title.title-2 {\\n          background-color: #2e7d32;\\n          color: #fff;\\n          font-weight: normal; }\\n\\n.list-pumps .item-pump .pump-inner .pump-info {\\n        padding: 10px;\\n        border: 1px solid #eee; }\\n\\n.list-pumps .item-pump .pump-inner .pump-info .info-01 .line {\\n          display: flex;\\n          flex-wrap: nowrap;\\n          margin-bottom: 5px;\\n          border: 1px solid #1565c0;\\n          border-radius: 4px; }\\n\\n.list-pumps .item-pump .pump-inner .pump-info .info-01 .line .col-line {\\n            padding: 3px 10px;\\n            width: 1000px; }\\n\\n.list-pumps .item-pump .pump-inner .pump-info .info-01 .line .col-line.left {\\n              color: #fff;\\n              background-color: #1565c0;\\n              font-size: 0.8rem; }\\n\\n.list-pumps .item-pump .pump-inner .pump-info .info-01 .line .col-line.right {\\n              font-size: 0.8rem; }\\n\\n.list-pumps .item-pump .pump-inner .pump-info .info-01 .line .col-line.right span {\\n                display: block; }\\n\\n.list-pumps .item-pump .pump-inner .pump-info .info-01 .line .col-line.right span.desc {\\n                  font-size: 12px; }\\n\\n.row-line {\\n  display: flex;\\n  flex-wrap: wrap; }\\n\\n.row-line .col-md-6 {\\n    width: 100%; }\\n\\n@media (min-width: 960px) {\\n  .row-line .col-md-6 {\\n    width: 50%; }\\n  .list-pumps {\\n    display: flex;\\n    justify-content: center; }\\n    .list-pumps .item-pump {\\n      width: 25%; }\\n      .list-pumps .item-pump.col-md-4 {\\n        width: 33.33%; }\\n      .list-pumps .item-pump .pump-inner .pump-info .info-01 .line .col-line.left {\\n        font-size: 1rem; }\\n      .list-pumps .item-pump .pump-inner .pump-info .info-01 .line .col-line.right {\\n        font-size: 1rem; }\\n        .list-pumps .item-pump .pump-inner .pump-info .info-01 .line .col-line.right span.desc {\\n          font-size: 12px; } }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZW50aXRpZXMvaG9tZS9kYXNoYm9hcmQvRTpcXGpvYnNcXGFuZ3VsYXIyLXdlYi9zcmNcXGFwcFxcZW50aXRpZXNcXGhvbWVcXGRhc2hib2FyZFxcZGFzaGJvYXJkLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usa0JBQWtCO0VBQ2xCLFFBQVE7RUFDUixXQUFXLEVBQUE7O0FBR2I7RUFDRSxrQkFBa0IsRUFBQTs7QUFJcEIsS0FBQTs7QUFDQTtFQUNFLGtCQUFrQixFQUFBOztBQUdwQjtFQUNFLGdCQUFnQixFQUFBOztBQURsQjtJQUdJLFNBQVMsRUFBQTs7QUFIYjtJQU1JLFlBQVksRUFBQTs7QUFJaEI7RUFDRSxtQkFBbUIsRUFBQTs7QUFEckI7SUFHSSxhQUFhO0lBQ2IsaUJBQWlCLEVBQUE7O0FBSnJCO01BTU0saUJBQWlCO01BQ2pCLGFBQWEsRUFBQTs7QUFQbkI7UUFTUSxjQUFjO1FBQ2QsZUFBZTtRQUNmLG1CQUFtQixFQUFBOztBQVgzQjtRQWNRLHlFQUF5RTtRQUN6RSxXQUFXO1FBQ1gsa0JBQWtCO1FBQ2xCLGVBQWU7UUFDZixtQkFBbUI7UUFDbkIsb0RBQW9ELEVBQUE7O0FBbkI1RDtVQXFCVSxtQkFBbUI7VUFDbkIsY0FBYyxFQUFBOztBQU94QjtFQUNFLGFBQWE7RUFDYix1QkFBdUI7RUFDdkIsZUFBZSxFQUFBOztBQUhqQjtJQUtJLFVBQVUsRUFBQTs7QUFMZDtNQU9NLGFBQWEsRUFBQTs7QUFQbkI7UUFTUSw0QkFBNEI7UUFDNUIsNkJBQTZCO1FBQzdCLGVBQWU7UUFDZixhQUFhO1FBQ2Isc0JBQXNCO1FBQ3RCLFNBQVMsRUFBQTs7QUFkakI7VUFnQlUseUJBQXlCO1VBQ3pCLFdBQVc7VUFDWCxtQkFBbUIsRUFBQTs7QUFsQjdCO1FBc0JRLGFBQWE7UUFDYixzQkFBc0IsRUFBQTs7QUF2QjlCO1VBMEJZLGFBQWE7VUFDYixpQkFBaUI7VUFDakIsa0JBQWtCO1VBQ2xCLHlCQUF5QjtVQUN6QixrQkFBa0IsRUFBQTs7QUE5QjlCO1lBZ0NnQixpQkFBaUI7WUFDakIsYUFBYSxFQUFBOztBQWpDN0I7Y0FtQ2dCLFdBQVc7Y0FDWCx5QkFBeUI7Y0FDekIsaUJBQWlCLEVBQUE7O0FBckNqQztjQXdDZ0IsaUJBQWlCLEVBQUE7O0FBeENqQztnQkEwQ2tCLGNBQWMsRUFBQTs7QUExQ2hDO2tCQTRDb0IsZUFBZSxFQUFBOztBQVluQztFQUNFLGFBQWE7RUFDYixlQUFlLEVBQUE7O0FBRmpCO0lBSUksV0FBVyxFQUFBOztBQUlmO0VBQ0U7SUFFSSxVQUFVLEVBQUE7RUFHZDtJQUNFLGFBQWE7SUFDYix1QkFBdUIsRUFBQTtJQUZ6QjtNQUlJLFVBQVUsRUFBQTtNQUpkO1FBTU0sYUFBYSxFQUFBO01BTm5CO1FBY2dCLGVBQWUsRUFBQTtNQWQvQjtRQWlCZ0IsZUFBZSxFQUFBO1FBakIvQjtVQW9Cb0IsZUFBZSxFQUFBLEVBQ2hCIiwiZmlsZSI6InNyYy9hcHAvZW50aXRpZXMvaG9tZS9kYXNoYm9hcmQvZGFzaGJvYXJkLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1vcmUtYnV0dG9uIHtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgdG9wOiA1cHg7XHJcbiAgcmlnaHQ6IDEwcHg7XHJcbn1cclxuXHJcbi5kYXNoYm9hcmQtY2FyZC1jb250ZW50IHtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuXHJcblxyXG4vKiAgKi9cclxuLnN0eWxlLWJ1dHRvbi1ibG9jayB7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcblxyXG4ucHJvZ3Jlc3MtaW5uZXIge1xyXG4gIHBhZGRpbmc6IC41cmVtIDA7XHJcbiAgLnZhbHVlIHtcclxuICAgIG1hcmdpbjogMDtcclxuICB9XHJcbiAgLm1hdC1wcm9ncmVzcy1iYXIge1xyXG4gICAgaGVpZ2h0OiAxMHB4O1xyXG4gIH1cclxufVxyXG5cclxuLmluZm8tc3RhdHVzIHtcclxuICBtYXJnaW4tYm90dG9tOiAxcmVtO1xyXG4gIC5saW5lIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LXdyYXA6IG5vd3JhcDtcclxuICAgIC5jb2wtbGluZSB7XHJcbiAgICAgIHBhZGRpbmc6IDVweCAxMHB4O1xyXG4gICAgICB3aWR0aDogMTAwMHB4O1xyXG4gICAgICAmLnB1bXBpbmcge1xyXG4gICAgICAgIGNvbG9yOiAjMDk3ZjBiO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiAxNXB4O1xyXG4gICAgICB9XHJcbiAgICAgICYuY29ubmVjdGluZyB7XHJcbiAgICAgICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDkwZGVnLCAjMDk3ZjBiIDAlLCAjMDk3OTBiIDM1JSwgIzAwZmYwYyAxMDAlKTtcclxuICAgICAgICBjb2xvcjogI2ZmZjtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDE1cHg7XHJcbiAgICAgICAgYm94LXNoYWRvdzogMXB4IDFweCAxcHggMHB4IHJnYmEoMTM0LCAxMzQsIDEzNCwgMC44KTtcclxuICAgICAgICAmLnVuIHtcclxuICAgICAgICAgIGJhY2tncm91bmQ6ICNjNmM2YzY7XHJcbiAgICAgICAgICBjb2xvcjogIzhhOGE4YTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbi5saXN0LXB1bXBzIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIGZsZXgtd3JhcDogd3JhcDtcclxuICAuaXRlbS1wdW1wIHtcclxuICAgIHdpZHRoOiA1MCU7XHJcbiAgICAucHVtcC1pbm5lciB7XHJcbiAgICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICAgIC5wdW1wLXRpdGxlIHtcclxuICAgICAgICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAxMHB4O1xyXG4gICAgICAgIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiAxMHB4O1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMXJlbTtcclxuICAgICAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNlZWU7XHJcbiAgICAgICAgbWFyZ2luOiAwO1xyXG4gICAgICAgICYudGl0bGUtMiB7XHJcbiAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmU3ZDMyO1xyXG4gICAgICAgICAgY29sb3I6ICNmZmY7XHJcbiAgICAgICAgICBmb250LXdlaWdodDogbm9ybWFsO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICAucHVtcC1pbmZvIHtcclxuICAgICAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNlZWU7XHJcbiAgICAgICAgLmluZm8tMDEge1xyXG4gICAgICAgICAgLmxpbmUge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICBmbGV4LXdyYXA6IG5vd3JhcDtcclxuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogNXB4O1xyXG4gICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjMTU2NWMwO1xyXG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgICAgICAgICAgIC5jb2wtbGluZSB7XHJcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiAzcHggMTBweDtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAwcHg7XHJcbiAgICAgICAgICAgICAgJi5sZWZ0IHtcclxuICAgICAgICAgICAgICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzE1NjVjMDtcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMC44cmVtO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAmLnJpZ2h0IHtcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMC44cmVtO1xyXG4gICAgICAgICAgICAgICAgc3BhbiB7XHJcbiAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgICAgICAgICAgICAmLmRlc2Mge1xyXG4gICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTJweDtcclxuICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuLnJvdy1saW5lIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtd3JhcDogd3JhcDtcclxuICAuY29sLW1kLTYge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgfVxyXG59XHJcblxyXG5AbWVkaWEgKG1pbi13aWR0aDogOTYwcHgpIHtcclxuICAucm93LWxpbmUge1xyXG4gICAgLmNvbC1tZC02IHtcclxuICAgICAgd2lkdGg6IDUwJTtcclxuICAgIH1cclxuICB9XHJcbiAgLmxpc3QtcHVtcHMge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgLml0ZW0tcHVtcCB7XHJcbiAgICAgIHdpZHRoOiAyNSU7XHJcbiAgICAgICYuY29sLW1kLTQge1xyXG4gICAgICAgIHdpZHRoOiAzMy4zMyU7XHJcbiAgICAgIH1cclxuICAgICAgLnB1bXAtaW5uZXIge1xyXG4gICAgICAgIC5wdW1wLWluZm8ge1xyXG4gICAgICAgICAgLmluZm8tMDEge1xyXG4gICAgICAgICAgICAubGluZSB7XHJcbiAgICAgICAgICAgICAgLmNvbC1saW5lIHtcclxuICAgICAgICAgICAgICAgICYubGVmdCB7XHJcbiAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMXJlbTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICYucmlnaHQge1xyXG4gICAgICAgICAgICAgICAgICBmb250LXNpemU6IDFyZW07XHJcbiAgICAgICAgICAgICAgICAgIHNwYW4ge1xyXG4gICAgICAgICAgICAgICAgICAgICYuZGVzYyB7XHJcbiAgICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDEycHg7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdfQ== */\"","import { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\r\nimport { Component, NgModule, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { map } from 'rxjs/operators';\r\nimport { SocketIoService } from '../../../core';\r\nimport { MatIconModule, MatProgressBarModule } from '@angular/material';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Title } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss'],\r\n})\r\n@NgModule({\r\n  exports: [],\r\n  imports: [CommonModule, MatIconModule, MatProgressBarModule],\r\n  declarations: [],\r\n  entryComponents: [],\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  /** Based on the screen size, switch from standard to one column per row */\r\n  cards = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\r\n    map(({ matches }) => {\r\n      if (matches) {\r\n        return [\r\n          { title: 'Card 1', cols: 1, rows: 1 },\r\n          { title: 'Card 2', cols: 1, rows: 1 },\r\n          { title: 'Card 3', cols: 1, rows: 1 },\r\n          { title: 'Card 4', cols: 1, rows: 1 },\r\n        ];\r\n      }\r\n\r\n      return [\r\n        { title: 'Card 1', cols: 2, rows: 1 },\r\n        { title: 'Card 2', cols: 1, rows: 1 },\r\n        { title: 'Card 3', cols: 1, rows: 2 },\r\n        { title: 'Card 4', cols: 1, rows: 1 },\r\n      ];\r\n    })\r\n  );\r\n\r\n  constructor(\r\n    private breakpointObserver: BreakpointObserver,\r\n    private socketIoService: SocketIoService,\r\n    private route: ActivatedRoute,\r\n    private titleService: Title\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.route.data.subscribe(({ pageTitle }) => {\r\n      this.titleService.setTitle(pageTitle);\r\n    });\r\n  }\r\n}\r\n","import { Routes } from '@angular/router';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\n\r\nexport const homeRoutes: Routes = [\r\n  {\r\n    path: 'dashboard',\r\n    component: DashboardComponent,\r\n    data: {\r\n      authorities: ['device_dashboard'],\r\n      pageTitle: 'Dashboard'\r\n    },\r\n  }\r\n];\r\n","export * from './role.service';\r\nexport * from './role.route';\r\nexport * from './role';\r\n","module.exports = \"<form name=\\\"deleteForm\\\" (ngSubmit)=\\\"confirmDelete(entity.id)\\\">\\r\\n  <h5 mat-dialog-content>Do you want to delete this data?</h5>\\r\\n  <div mat-dialog-actions class=\\\"d-flex justify-content-center\\\">\\r\\n    <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">OK</button>\\r\\n    <button mat-raised-button mat-dialog-close>Cancel</button>\\r\\n  </div>\\r\\n</form>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VudGl0aWVzL3JvbGUvcm9sZS1kZWxldGUtZGlhbG9nL3JvbGUtZGVsZXRlLWRpYWxvZy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, HostListener, OnDestroy, OnInit } from '@angular/core';\r\nimport { IRole } from '../role';\r\nimport { MatDialog, MatDialogRef } from '@angular/material';\r\nimport { RoleService } from '../role.service';\r\nimport { JhiEventManager } from 'ng-jhipster';\r\nimport { ActivatedRoute, Data, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-role-delete-dialog',\r\n  templateUrl: './role-delete-dialog.component.html',\r\n  styleUrls: ['./role-delete-dialog.component.scss']\r\n})\r\nexport class RoleDeleteDialogComponent implements OnInit {\r\n  entity: IRole;\r\n\r\n  @HostListener('window:keyup.esc')\r\n  private onKeyUp() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<RoleDeleteDialogComponent>,\r\n    private service: RoleService,\r\n    private eventManager: JhiEventManager,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  confirmDelete(login) {\r\n    this.service.delete(login).subscribe(() => {\r\n      this.eventManager.broadcast({\r\n        name: 'roleListModification',\r\n        content: 'Deleted a role'\r\n      });\r\n      this.dialogRef.close(true);\r\n    });\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-role-delete-popup',\r\n  template: ''\r\n})\r\nexport class RoleDeletePopupComponent implements OnInit, OnDestroy {\r\n  private dialogRef: MatDialogRef<RoleDeleteDialogComponent>;\r\n\r\n  constructor(private activatedRoute: ActivatedRoute, private router: Router, private dialog: MatDialog) {}\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.data.subscribe(({entity}: Data) => {\r\n      setTimeout(() => {\r\n        this.dialogRef = this.dialog.open(RoleDeleteDialogComponent, {\r\n          disableClose: true,\r\n          width: '500px',\r\n        });\r\n\r\n        this.dialogRef.componentInstance.entity = entity;\r\n\r\n        this.dialogRef.afterClosed().subscribe(\r\n          result => {\r\n            this.router.navigate([{outlets: {popup: null}}], {replaceUrl: true, queryParamsHandling: 'merge'});\r\n          },\r\n          reason => {\r\n            this.router.navigate([{outlets: {popup: null}}], {replaceUrl: true, queryParamsHandling: 'merge'});\r\n          }\r\n        );\r\n      }, 0);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.dialogRef = null;\r\n  }\r\n}\r\n","import { CriteriaSearch } from '../../../shared';\r\n\r\nexport class RoleListSearch extends CriteriaSearch {\r\n  constructor(\r\n    public query?: string,\r\n  ) {\r\n    super();\r\n    if (!query) {\r\n      this.query = '';\r\n    }\r\n  }\r\n\r\n  valid() {\r\n    return true;\r\n  }\r\n\r\n  addQueryParams() {\r\n    this.setQueryParam('query', this.query || '');\r\n  }\r\n}\r\n","module.exports = \"<mat-card>\\r\\n  <mat-card-title>\\r\\n    <h1 id=\\\"user-list-heading\\\" class=\\\"mat-h1\\\">{{'role.title'|translate}}</h1>\\r\\n  </mat-card-title>\\r\\n  <mat-card-content>\\r\\n    <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start none\\\" fxLayoutGap=\\\"4px\\\">\\r\\n      <form class=\\\"form-search\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n        <mat-form-field>\\r\\n          <input matInput type=\\\"search\\\" name=\\\"currentSearch\\\" [(ngModel)]=\\\"searchService.query\\\" [placeholder]=\\\"'global.enterSearchKey'|translate\\\">\\r\\n          <button mat-icon-button matSuffix aria-label=\\\"search\\\" [disabled]=\\\"!searchService.valid()\\\" (click)=\\\"search()\\\">\\r\\n            <mat-icon>search</mat-icon>\\r\\n          </button>\\r\\n        </mat-form-field>\\r\\n        <button mat-mini-fab color=\\\"primary\\\" [routerLink]=\\\"['/role/new']\\\" *appHasAnyAuthority=\\\"'user_role_store'\\\"\\r\\n                class=\\\"float-right\\\">\\r\\n          <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">add</mat-icon>\\r\\n        </button>\\r\\n      </form>\\r\\n    </div>\\r\\n    <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\" aria-describedby=\\\"user-list-heading\\\">\\r\\n      <!-- Column -->\\r\\n      <ng-container matColumnDef=\\\"id\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> ID </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\r\\n      </ng-container>\\r\\n      <!-- Column -->\\r\\n      <ng-container matColumnDef=\\\"label\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> {{'role.columns.label'|translate}} </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.label}} </td>\\r\\n      </ng-container>\\r\\n      <!--  Column -->\\r\\n      <ng-container matColumnDef=\\\"description\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> {{'role.columns.description'|translate}} </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.description}} </td>\\r\\n      </ng-container>\\r\\n      <!--  Column -->\\r\\n\\r\\n      <!-- Control Column -->\\r\\n      <ng-container matColumnDef=\\\"action\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef>  </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n          <div class=\\\"button-row\\\">\\r\\n            <button mat-icon-button  color=\\\"basic\\\" [routerLink]=\\\"['/role', element.id, 'edit']\\\" *appHasAnyAuthority=\\\"'user_role_update'\\\">\\r\\n              <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">create</mat-icon>\\r\\n            </button>\\r\\n\\r\\n            <button mat-icon-button  color=\\\"warn\\\" [routerLink]=\\\"['/', { outlets: { popup: ['role', element.id, 'delete'] }}]\\\" *appHasAnyAuthority=\\\"'user_role_destroy'\\\">\\r\\n              <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">delete_forever</mat-icon>\\r\\n            </button>\\r\\n          </div>\\r\\n        </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n    </table>\\r\\n    <mat-paginator [length]=\\\"searchService.getTotalCount()\\\"\\r\\n                    [pageSize]=\\\"searchService.getPageSize()\\\"\\r\\n                    [pageSizeOptions]=\\\"searchService.getPageOptions()\\\"\\r\\n                    showFirstLastButtons\\r\\n                    (page)=\\\"onPageChange($event)\\\"></mat-paginator>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VudGl0aWVzL3JvbGUvcm9sZS1saXN0L3JvbGUtbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { RoleListSearch } from './role-list-search';\r\nimport { RoleService } from '../role.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { JhiEventManager } from 'ng-jhipster';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { MatTableDataSource, PageEvent } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-role-list',\r\n  templateUrl: './role-list.component.html',\r\n  styleUrls: ['./role-list.component.scss']\r\n})\r\nexport class RoleListComponent implements OnInit, OnDestroy {\r\n  dataSource;\r\n  displayedColumns: string[] = ['id', 'label', 'description', 'action'];\r\n  searchService = new RoleListSearch();\r\n  eventSubscriber: Subscription;\r\n  constructor(\r\n    private service: RoleService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private titleService: Title,\r\n    private eventManager: JhiEventManager,\r\n  ) {\r\n    this.dataSource = null;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.titleService.setTitle('Role list');\r\n    this.onRoleListModification();\r\n    this.search();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.eventManager.destroy(this.eventSubscriber);\r\n  }\r\n\r\n  onRoleListModification() {\r\n    this.eventSubscriber = this.eventManager.subscribe('roleListModification', () => this.search());\r\n  }\r\n\r\n  search() {\r\n    this.getList();\r\n  }\r\n\r\n  getList() {\r\n    const req = this.searchService.getParams();\r\n    this.service.query(req).subscribe((response: HttpResponse<any>) => {\r\n      const result = response.body;\r\n      if (result) {\r\n        this.dataSource = new MatTableDataSource(result.data);\r\n        this.searchService.setResponse(result);\r\n      }\r\n    });\r\n  }\r\n\r\n  onPageChange(event: PageEvent) {\r\n    this.searchService.setPage(event.pageIndex + 1);\r\n    this.searchService.setPageSize(event.pageSize);\r\n    this.search();\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"grid-container\\\">\\r\\n  <mat-card>\\r\\n    <mat-card-title>\\r\\n      <h1 id=\\\"user-list-heading\\\" class=\\\"mat-h1\\\">Role Create</h1>\\r\\n    </mat-card-title>\\r\\n    <mat-card-actions>\\r\\n      <div style=\\\"padding-left: 8px;\\\">\\r\\n        <button mat-raised-button routerLink=\\\"/role\\\"><mat-icon>keyboard_backspace</mat-icon> Back</button>\\r\\n        <button mat-raised-button color=\\\"primary\\\" (click)=\\\"save()\\\"><mat-icon>save</mat-icon> Save</button>\\r\\n      </div>\\r\\n    </mat-card-actions>\\r\\n    <mat-card-content>\\r\\n      <mat-grid-list [cols]=\\\"breakpoint\\\" (window:resize)=\\\"onResize($event)\\\" gutterSize=\\\"10px\\\" [rowHeight]=\\\"gridHeight\\\">\\r\\n        <mat-grid-tile [rowspan]=\\\"rowSpanForm\\\">\\r\\n          <form class=\\\"form-container role-form\\\" name=\\\"editForm\\\" role=\\\"form\\\" novalidate (ngSubmit)=\\\"save()\\\" #editForm=\\\"ngForm\\\">\\r\\n            <h3>Role information</h3>\\r\\n            <mat-form-field>\\r\\n              <input matInput placeholder=\\\"Role name\\\" name=\\\"label\\\" [(ngModel)]=\\\"role.label\\\" required>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field>\\r\\n              <textarea matInput placeholder=\\\"Role description\\\" name=\\\"description\\\" [(ngModel)]=\\\"role.description\\\" rows=\\\"3\\\"></textarea>\\r\\n            </mat-form-field>\\r\\n          </form>\\r\\n        </mat-grid-tile>\\r\\n        <mat-grid-tile [rowspan]=\\\"rowSpanTree\\\">\\r\\n          <div class=\\\"form-container\\\" #matTreeContainer>\\r\\n            <h3>Role permissions</h3>\\r\\n            <mat-tree #tree [dataSource]=\\\"dataSource\\\" [treeControl]=\\\"treeControl\\\">\\r\\n              <!-- This is the tree node template for leaf nodes -->\\r\\n              <mat-tree-node *matTreeNodeDef=\\\"let node\\\" matTreeNodePadding>\\r\\n                <!-- use a disabled button to provide padding for tree leaf -->\\r\\n                <button mat-icon-button disabled></button>\\r\\n                <mat-checkbox class=\\\"checklist-leaf-node\\\"\\r\\n                              [checked]=\\\"checklistSelection.isSelected(node)\\\"\\r\\n                              (change)=\\\"todoLeafItemSelectionToggle(node)\\\">{{node.name}}</mat-checkbox>\\r\\n              </mat-tree-node>\\r\\n              <!-- This is the tree node template for expandable nodes -->\\r\\n              <mat-tree-node *matTreeNodeDef=\\\"let node;when: hasChild\\\" matTreeNodePadding>\\r\\n                <button mat-icon-button matTreeNodeToggle (click)=\\\"onTreeClick($event, matTreeContainer)\\\"\\r\\n                        [attr.aria-label]=\\\"'toggle ' + node.name\\\">\\r\\n                  <mat-icon class=\\\"mat-icon-rtl-mirror\\\">\\r\\n                    {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\\r\\n                  </mat-icon>\\r\\n                </button>\\r\\n                <mat-checkbox [checked]=\\\"descendantsAllSelected(node)\\\"\\r\\n                              [indeterminate]=\\\"descendantsPartiallySelected(node)\\\"\\r\\n                              (change)=\\\"todoItemSelectionToggle(node)\\\">{{node.name}}</mat-checkbox>\\r\\n              </mat-tree-node>\\r\\n            </mat-tree>\\r\\n          </div>\\r\\n        </mat-grid-tile>\\r\\n      </mat-grid-list>\\r\\n    </mat-card-content>\\r\\n  </mat-card>\\r\\n</div>\\r\\n\"","module.exports = \".mat-grid-list .mat-grid-tile .role-form {\\n  overflow: auto;\\n  max-height: 200px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZW50aXRpZXMvcm9sZS9yb2xlLXVwZGF0ZS9FOlxcam9ic1xcYW5ndWxhcjItd2ViL3NyY1xcYXBwXFxlbnRpdGllc1xccm9sZVxccm9sZS11cGRhdGVcXHJvbGUtdXBkYXRlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsY0FBYztFQUNkLGlCQUFpQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvZW50aXRpZXMvcm9sZS9yb2xlLXVwZGF0ZS9yb2xlLXVwZGF0ZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXQtZ3JpZC1saXN0ICAubWF0LWdyaWQtdGlsZSAucm9sZS1mb3Jte1xyXG4gIG92ZXJmbG93OiBhdXRvO1xyXG4gIG1heC1oZWlnaHQ6IDIwMHB4O1xyXG59XHJcbiJdfQ== */\"","import { AfterContentInit, AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FlatTreeControl } from '@angular/cdk/tree';\r\nimport { MatTreeFlatDataSource, MatTreeFlattener } from '@angular/material';\r\nimport { IPermission, IRole, IRoleTreeNode, Role } from '../role';\r\nimport { RoleService } from '../role.service';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { ActivatedRoute, Data, Router } from '@angular/router';\r\n\r\n/** Flat node with expandable and level information */\r\ninterface FlatNode {\r\n  expandable: boolean;\r\n  name: string;\r\n  id: string;\r\n  level: number;\r\n  selected: boolean;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-role-update',\r\n  templateUrl: './role-update.component.html',\r\n  styleUrls: ['./role-update.component.scss']\r\n})\r\nexport class RoleUpdateComponent implements OnInit, AfterContentInit {\r\n  treeControl = new FlatTreeControl<FlatNode>(\r\n    node => node.level, node => node.expandable);\r\n  treeFlattener;\r\n  dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\r\n  breakpoint;\r\n  gridHeight;\r\n  rowSpanForm;\r\n  rowSpanTree;\r\n  @ViewChild('tree') tree;\r\n  @ViewChild('matTreeContainer') matTreeContainer;\r\n  /** The selection for checklist */\r\n  checklistSelection = new SelectionModel<FlatNode>(true /* multiple */);\r\n\r\n  /** ---- ROLE SERVICES ---- */\r\n  role: IRole;\r\n\r\n  constructor(\r\n    private service: RoleService,\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n  ) {\r\n    this.treeFlattener = new MatTreeFlattener(\r\n      this._transformer, node => node.level, node => node.expandable, node => node.children);\r\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\r\n    this.dataSource.data = [];\r\n    this.role = new Role();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.breakpoint = this._breakpoint(window.innerWidth);\r\n    this.resizeGrid();\r\n\r\n    /** ---- ROLE SERVICES ---- */\r\n    this.activatedRoute.data.subscribe(({entity}: Data) => {\r\n      if (entity) {\r\n        this.role = entity;\r\n      }\r\n    });\r\n    this.getTreeNodes();\r\n  }\r\n\r\n  private _transformer = (node: IRoleTreeNode, level: number) => {\r\n    return {\r\n      expandable: !!node.children && node.children.length > 0,\r\n      name: node.name,\r\n      level: level,\r\n      id: node.id,\r\n      selected: node.selected,\r\n    };\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    const _this = this;\r\n    setTimeout(function () {\r\n      _this.resizeGrid();\r\n    }, 1000);\r\n  }\r\n\r\n  getLevel = (node: FlatNode) => node.level;\r\n\r\n  resizeGrid() {\r\n    if (this.breakpoint === 1) {\r\n      this.gridHeight = `300px`;\r\n      this.rowSpanTree = this.matTreeContainer.nativeElement.offsetHeight / 300;\r\n      this.rowSpanForm =  1;\r\n    } else {\r\n      this.gridHeight = this.matTreeContainer.nativeElement.offsetHeight;\r\n      this.rowSpanTree = 1;\r\n      this.rowSpanForm = 1;\r\n    }\r\n  }\r\n\r\n  hasChild = (_: number, node: FlatNode) => node.expandable;\r\n\r\n  _breakpoint = (width) => {\r\n    return (width <= 800) ? 1 : 2;\r\n  }\r\n\r\n  onResize(event) {\r\n    this.breakpoint = this._breakpoint(event.target.innerWidth);\r\n    this.resizeGrid();\r\n  }\r\n\r\n  onTreeClick(event) {\r\n    this.resizeGrid();\r\n  }\r\n\r\n  /** Whether all the descendants of the node are selected. */\r\n  descendantsAllSelected(node: FlatNode): boolean {\r\n    const descendants = this.treeControl.getDescendants(node);\r\n    return descendants.every(child =>\r\n      this.checklistSelection.isSelected(child)\r\n    );\r\n  }\r\n\r\n  /** Whether part of the descendants are selected */\r\n  descendantsPartiallySelected(node: FlatNode): boolean {\r\n    const descendants = this.treeControl.getDescendants(node);\r\n    const result = descendants.some(child => this.checklistSelection.isSelected(child));\r\n    return result && !this.descendantsAllSelected(node);\r\n  }\r\n\r\n  /** Toggle the to-do item selection. Select/deselect all the descendants node */\r\n  todoItemSelectionToggle(node: FlatNode): void {\r\n    this.checklistSelection.toggle(node);\r\n    const descendants = this.treeControl.getDescendants(node);\r\n    this.checklistSelection.isSelected(node)\r\n      ? this.checklistSelection.select(...descendants)\r\n      : this.checklistSelection.deselect(...descendants);\r\n\r\n    // Force update for the parent\r\n    descendants.every(child =>\r\n      this.checklistSelection.isSelected(child)\r\n    );\r\n    this.checkAllParentsSelection(node);\r\n  }\r\n\r\n  /* Checks all the parents when a leaf node is selected/unselected */\r\n  checkAllParentsSelection(node: FlatNode): void {\r\n    let parent: FlatNode | null = this.getParentNode(node);\r\n    while (parent) {\r\n      this.checkRootNodeSelection(parent);\r\n      parent = this.getParentNode(parent);\r\n    }\r\n  }\r\n\r\n  /* Get the parent node of a node */\r\n  getParentNode(node: FlatNode): FlatNode | null {\r\n    const currentLevel = this.getLevel(node);\r\n\r\n    if (currentLevel < 1) {\r\n      return null;\r\n    }\r\n\r\n    const startIndex = this.treeControl.dataNodes.indexOf(node) - 1;\r\n\r\n    for (let i = startIndex; i >= 0; i--) {\r\n      const currentNode = this.treeControl.dataNodes[i];\r\n\r\n      if (this.getLevel(currentNode) < currentLevel) {\r\n        return currentNode;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /** Check root node checked state and change it accordingly */\r\n  checkRootNodeSelection(node: FlatNode): void {\r\n    const nodeSelected = this.checklistSelection.isSelected(node);\r\n    const descendants = this.treeControl.getDescendants(node);\r\n    const descAllSelected = descendants.every(child =>\r\n      this.checklistSelection.isSelected(child)\r\n    );\r\n    if (nodeSelected && !descAllSelected) {\r\n      this.checklistSelection.deselect(node);\r\n    } else if (!nodeSelected && descAllSelected) {\r\n      this.checklistSelection.select(node);\r\n    }\r\n  }\r\n\r\n  /** Toggle a leaf to-do item selection. Check all the parents to see if they changed */\r\n  todoLeafItemSelectionToggle(node: FlatNode): void {\r\n    this.checklistSelection.toggle(node);\r\n    this.checkAllParentsSelection(node);\r\n  }\r\n\r\n  /** ---------- ROLE SERVICES ----------- */\r\n\r\n  getTreeNodes() {\r\n    this.service.tree().subscribe((response: HttpResponse<any>) => {\r\n      const result = response.body;\r\n      if (result) {\r\n        const permissions = this.role.permissions;\r\n        this.dataSource.data = result.map((item: IRoleTreeNode) => {\r\n          return {\r\n            name: item.description,\r\n            children: item.children.map((itemChild: IPermission) => {\r\n              return {\r\n                name: itemChild.text,\r\n                id: itemChild.id,\r\n                selected: permissions.includes(itemChild.id),\r\n              };\r\n            }),\r\n          };\r\n        });\r\n        this.tree.treeControl.expandAll();\r\n        this.treeControl.dataNodes.forEach((node: FlatNode) => {\r\n          if (node.selected) {\r\n            this.checklistSelection.select(node);\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  save() {\r\n    this.role.permissions = this.checklistSelection.selected.filter((node: FlatNode) => {\r\n      return node.level === 1 && node.expandable === false;\r\n    }).map(value => value.id);\r\n    if (this.role.id !== null) {\r\n      this.service.update(this.role).subscribe(() => this.onSaveSuccess(), () => this.onSaveError());\r\n    } else {\r\n      this.service.create(this.role).subscribe(() => this.onSaveSuccess(), () => this.onSaveError());\r\n    }\r\n  }\r\n\r\n  private onSaveSuccess() {\r\n    this.router.navigate(['/role'], {});\r\n  }\r\n\r\n  private onSaveError() {\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot, Routes } from '@angular/router';\r\nimport { JhiResolvePagingParams } from 'ng-jhipster';\r\nimport { map } from 'rxjs/operators';\r\nimport { IRole, Role } from './role';\r\nimport { RoleService } from './role.service';\r\nimport { RoleListComponent } from './role-list/role-list.component';\r\nimport { RoleUpdateComponent } from './role-update/role-update.component';\r\nimport { RoleDeletePopupComponent } from './role-delete-dialog/role-delete-dialog.component';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class RoleResolve implements Resolve<IRole> {\r\n  constructor(private service: RoleService) {\r\n  }\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    const id = route.paramMap.get('id');\r\n    return this.service.find(id).pipe(map((role: HttpResponse<Role>) => role.body));\r\n  }\r\n}\r\n\r\nexport const roleRoutes: Routes = [\r\n  {\r\n    path: 'role',\r\n    component: RoleListComponent,\r\n    resolve: {\r\n      pagingParams: JhiResolvePagingParams,\r\n    },\r\n    data: {\r\n      authorities: ['user_role_index'],\r\n      pageTitle: 'Role List',\r\n      defaultSort: 'id,asc'\r\n    },\r\n  },\r\n  {\r\n    path: 'role/new',\r\n    component: RoleUpdateComponent,\r\n    resolve: {\r\n      pagingParams: JhiResolvePagingParams,\r\n    },\r\n    data: {\r\n      authorities: ['user_role_store'],\r\n      pageTitle: 'Role Create',\r\n      defaultSort: 'id,asc'\r\n    },\r\n  },\r\n  {\r\n    path: 'role/:id/edit',\r\n    component: RoleUpdateComponent,\r\n    resolve: {\r\n      entity: RoleResolve,\r\n    },\r\n    data: {\r\n      authorities: ['user_role_update'],\r\n      pageTitle: 'Role Update'\r\n    },\r\n  },\r\n];\r\n\r\nexport const rolePopupRoute: Routes = [\r\n  {\r\n    path: 'role/:id/delete',\r\n    component: RoleDeletePopupComponent,\r\n    resolve: {\r\n      entity: RoleResolve\r\n    },\r\n    data: {\r\n      authorities: ['user_role_destroy'],\r\n      pageTitle: 'Role Delete'\r\n    },\r\n    outlet: 'popup'\r\n  },\r\n];\r\n","import { Injectable } from '@angular/core';\r\nimport { IRole, IRoleTreeNode } from './role';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\n\r\ninterface Page {\r\n  data: IRole[];\r\n}\r\n\r\ntype EntityType = IRole;\r\ntype EntityNodeType = IRoleTreeNode;\r\ntype EntityResponseType = HttpResponse<EntityType>;\r\ntype EntityListResponseType = HttpResponse<EntityType[]>;\r\ntype EntityPageResponseType = HttpResponse<Page>;\r\ntype EntityTreeResponseType = HttpResponse<EntityNodeType[]>;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RoleService {\r\n  private resourceUrl = '/api/roles';\r\n  constructor(private http: HttpClient) { }\r\n\r\n  create(entity: EntityType): Observable<EntityResponseType> {\r\n    const copy = this.convertEntityFromClient(entity);\r\n    return this.http.post<EntityType>(this.resourceUrl, copy, {observe: 'response'})\r\n      .pipe(map((res: EntityResponseType) => this.convertEntityFromServer(res)));\r\n  }\r\n\r\n  update(entity: EntityType): Observable<EntityResponseType> {\r\n    const copy = this.convertEntityFromClient(entity);\r\n    return this.http.put<EntityType>(this.resourceUrl + '/' + entity.id, copy, {observe: 'response'})\r\n      .pipe(map((res: EntityResponseType) => this.convertEntityFromServer(res)));\r\n  }\r\n\r\n  find(login: string): Observable<EntityResponseType> {\r\n    return this.http.get<EntityType>(`${this.resourceUrl}/${login}`, {observe: 'response'})\r\n      .pipe(map((res: EntityResponseType) => this.convertEntityFromServer(res)));\r\n  }\r\n\r\n  query(req?: any): Observable<EntityPageResponseType> {\r\n    return this.http\r\n      .get<Page>(this.resourceUrl, {params: req, observe: 'response'})\r\n      .pipe(map((res: EntityPageResponseType) => this.convertPageServer(res)));\r\n  }\r\n\r\n  delete(login: string): Observable<EntityResponseType> {\r\n    return this.http.delete(`${this.resourceUrl}/${login}`, {observe: 'response'});\r\n  }\r\n\r\n  list(req?: any): Observable<EntityListResponseType> {\r\n    return this.http\r\n      .get<EntityType[]>(`${this.resourceUrl}`, {params: req, observe: 'response'})\r\n      .pipe(map((res: EntityListResponseType) => this.convertListServer(res)));\r\n  }\r\n\r\n  options(req?: any): Observable<EntityListResponseType> {\r\n    return this.http\r\n      .get<EntityType[]>(`${this.resourceUrl}/option`, {params: req, observe: 'response'})\r\n      .pipe(map((res: EntityListResponseType) => this.convertListServer(res)));\r\n  }\r\n\r\n  tree(): Observable<EntityTreeResponseType> {\r\n    return this.http\r\n      .get<EntityNodeType[]>(`${this.resourceUrl}/tree`, {observe: 'response'})\r\n      .pipe(map((res: EntityTreeResponseType) => res));\r\n  }\r\n\r\n  private convertEntityFromClient(entity: EntityType): EntityType {\r\n    const res: EntityType = Object.assign({}, entity, {\r\n    });\r\n    return res;\r\n  }\r\n\r\n  private convertEntityFromServer(res: EntityResponseType): EntityResponseType {\r\n    return res;\r\n  }\r\n\r\n  private convertListServer(res: EntityListResponseType): EntityListResponseType {\r\n    return res;\r\n  }\r\n\r\n  private convertPageServer(res: EntityPageResponseType): EntityPageResponseType {\r\n    return res;\r\n  }\r\n}\r\n","export interface IRole {\r\n  id?: any;\r\n  label?: string;\r\n  description?: string;\r\n  permissions?: string[];\r\n}\r\n\r\nexport interface IPermission {\r\n  text?: string;\r\n  id?: string;\r\n  name?: string;\r\n}\r\n\r\nexport interface IRoleTreeNode {\r\n  id?: string;\r\n  opened?: boolean;\r\n  children?: IPermission[];\r\n  name?: string;\r\n  description?: string;\r\n  selected?: boolean;\r\n}\r\n\r\nexport class Role implements IRole {\r\n  constructor(\r\n    public id?: any,\r\n    public label?: string,\r\n    public description?: string,\r\n    public permissions?: string[],\r\n  ) {\r\n    this.id = id ? id : null;\r\n    this.label = label ? label : null;\r\n    this.description = description ? description : null;\r\n    this.permissions = permissions ? permissions : [];\r\n  }\r\n}\r\n","export * from './user.route';\r\nexport * from './user-list/user-list.component';\r\n","module.exports = \"<form name=\\\"deleteForm\\\" (ngSubmit)=\\\"confirmDelete(user.login)\\\">\\r\\n  <h5 matDialogTitle>Do you want to delete this user?</h5>\\r\\n  <div matDialogActions class=\\\"d-flex justify-content-center\\\">\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-sm btn-danger\\\">\\r\\n      <i class=\\\"far fa-trash-alt\\\" aria-hidden=\\\"true\\\"></i> Ok</button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-sm btn-secondary\\\" matDialogClose>\\r\\n      <i class=\\\"far fa-times-circle\\\" aria-hidden=\\\"true\\\"></i> Cancel</button>\\r\\n  </div>\\r\\n</form>\\r\\n\"","import { Component, HostListener, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material';\r\nimport { ActivatedRoute, Data, Router } from '@angular/router';\r\nimport { JhiEventManager } from 'ng-jhipster';\r\nimport { User } from '../user.model';\r\nimport { UserService } from '../user.service';\r\n\r\n@Component({\r\n  selector: 'app-user-delete-dialog',\r\n  templateUrl: './user-delete-dialog.component.html'\r\n})\r\nexport class UserDeleteDialogComponent {\r\n  user: User;\r\n\r\n  @HostListener('window:keyup.esc')\r\n  private onKeyUp() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<UserDeleteDialogComponent>,\r\n    private userService: UserService,\r\n    private eventManager: JhiEventManager\r\n  ) {}\r\n\r\n  confirmDelete(login) {\r\n    this.userService.delete(login).subscribe(response => {\r\n      this.eventManager.broadcast({\r\n        name: 'userListModification',\r\n        content: 'Deleted a user'\r\n      });\r\n      this.dialogRef.close(true);\r\n    });\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-user-delete-popup',\r\n  template: ''\r\n})\r\nexport class UserDeletePopupComponent implements OnInit, OnDestroy {\r\n  private dialogRef: MatDialogRef<UserDeleteDialogComponent>;\r\n\r\n  constructor(private activatedRoute: ActivatedRoute, private router: Router, private dialog: MatDialog) {}\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.data.subscribe(({user}: Data) => {\r\n      setTimeout(() => {\r\n        this.dialogRef = this.dialog.open(UserDeleteDialogComponent, {\r\n          disableClose: true,\r\n          width: '500px',\r\n        });\r\n\r\n        this.dialogRef.componentInstance.user = user;\r\n\r\n        this.dialogRef.afterClosed().subscribe(\r\n          result => {\r\n            this.router.navigate([{outlets: {popup: null}}], {replaceUrl: true, queryParamsHandling: 'merge'});\r\n          },\r\n          reason => {\r\n            this.router.navigate([{outlets: {popup: null}}], {replaceUrl: true, queryParamsHandling: 'merge'});\r\n          }\r\n        );\r\n      }, 0);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.dialogRef = null;\r\n  }\r\n}\r\n","module.exports = \"<router-outlet></router-outlet>\\r\\n<mat-card>\\r\\n  <mat-card-title>\\r\\n    <h1 id=\\\"user-list-heading\\\" class=\\\"mat-h1\\\">{{'user.title'|translate}}</h1>\\r\\n  </mat-card-title>\\r\\n  <mat-card-content>\\r\\n    <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start none\\\" fxLayoutGap=\\\"4px\\\">\\r\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\" fxLayoutGap=\\\"4px\\\" fxFlexFill>\\r\\n        <mat-form-field>\\r\\n          <input matInput [placeholder]=\\\"'global.enterSearchKey'|translate\\\">\\r\\n          <button mat-icon-button matSuffix aria-label=\\\"search\\\">\\r\\n            <mat-icon>search</mat-icon>\\r\\n          </button>\\r\\n        </mat-form-field>\\r\\n        <button mat-flat-button color=\\\"primary\\\" [routerLink]=\\\"['./new']\\\"\\r\\n                *appHasAnyAuthority=\\\"['can_user', 'can_create_user']\\\"\\r\\n                class=\\\"float-right\\\"><mat-icon>supervised_user_circle</mat-icon> {{'user.createLabel'|translate}}</button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <table mat-table [dataSource]=\\\"dataSource\\\" aria-describedby=\\\"user-list-heading\\\" class=\\\"mat-elevation-z8\\\">\\r\\n    \\r\\n      <!-- Position Column -->\\r\\n      <ng-container matColumnDef=\\\"status\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef scope=\\\"col\\\">{{'user.columns.status'|translate}}</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"element.status\\\" disabled></mat-checkbox> </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- Position Column -->\\r\\n      <ng-container matColumnDef=\\\"id\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef scope=\\\"col\\\">ID</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- Name Column -->\\r\\n      <ng-container matColumnDef=\\\"name\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef scope=\\\"col\\\">{{'user.columns.fullName'|translate}}</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.last_name}} {{element.first_name}} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- Weight Column -->\\r\\n      <ng-container matColumnDef=\\\"email\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef scope=\\\"col\\\">Email</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.email}} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- Symbol Column -->\\r\\n      <ng-container matColumnDef=\\\"phone\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef scope=\\\"col\\\">{{'user.columns.phone'|translate}}</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.phone}} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- Symbol Column -->\\r\\n      <ng-container matColumnDef=\\\"role\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef scope=\\\"col\\\">{{'user.columns.role'|translate}}</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.role_name}} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"action\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef scope=\\\"col\\\"></th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\" fxLayoutGap=\\\"5px\\\">\\r\\n          <div class=\\\"group-button-row\\\">\\r\\n            <button mat-mini-fab color=\\\"primary\\\" aria-label=\\\"Sửa\\\" [routerLink]=\\\"['./delete', element.id]\\\"\\r\\n              *appHasAnyAuthority=\\\"['can_user', 'can_update_user']\\\">\\r\\n              <mat-icon>open_in_new</mat-icon>\\r\\n            </button>\\r\\n            <button mat-mini-fab color=\\\"warn\\\" aria-label=\\\"Xóa\\\" [routerLink]=\\\"['./edit', element.id]\\\"\\r\\n              *appHasAnyAuthority=\\\"['can_user', 'can_delete_user']\\\">\\r\\n              <mat-icon>remove_circle</mat-icon>\\r\\n            </button>\\r\\n          </div>\\r\\n        </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" class=\\\"element-row\\\"></tr>\\r\\n    </table>\\r\\n\\r\\n    <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" [length]=\\\"total\\\" [pageSize]=\\\"pageSize\\\" showFirstLastButtons (page)=\\\"pageChanged($event)\\\" ></mat-paginator>\\r\\n  </mat-card-content>\\r\\n</mat-card>\"","import { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { HttpResponse } from '@angular/common/http';\r\n\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { JhiAlertService, JhiEventManager, JhiParseLinks } from 'ng-jhipster';\r\n\r\nimport { Principal } from '../../../core';\r\nimport { MatTableDataSource, PageEvent, MatDialog } from '@angular/material';\r\nimport { Subscription } from 'rxjs';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { ITEMS_PER_PAGE, PAGE_SIZE_OPTIONS } from '../../../shared/constants/pagination.constants';\r\nimport { IUser, User } from '../user.model';\r\nimport { UserService } from '../user.service';\r\n\r\n@Component({\r\n  selector: 'app-user-list',\r\n  templateUrl: './user-list.component.html'\r\n})\r\nexport class UserListComponent implements OnInit {\r\n  displayedColumns: string[] = ['status', 'id', 'name', 'email', 'phone', 'role', 'action'];\r\n  dataSource;\r\n  filterForm: FormGroup;\r\n  total: number;\r\n  pageSize = 20;\r\n  eventSubscriber: Subscription;\r\n  constructor(\r\n    private readonly dialog: MatDialog,\r\n    private readonly route: ActivatedRoute,\r\n    private readonly router: Router,\r\n    private readonly fb: FormBuilder,\r\n    private eventManager: JhiEventManager,\r\n    private readonly userService: UserService,\r\n    private titleService: Title,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.route.data.subscribe(({pageTitle}) => {\r\n      this.titleService.setTitle(pageTitle);\r\n    });\r\n\r\n    this.filterForm = this.fb.group({\r\n      userName: null\r\n    });\r\n    this.filterForm.valueChanges.subscribe((formData) => {\r\n      const userName = formData.userName;\r\n      const newQueryParams: {userName?: string} = {};\r\n      newQueryParams.userName = userName;\r\n      this.router.navigate([], {\r\n        relativeTo: this.route,\r\n        queryParams: newQueryParams,\r\n        queryParamsHandling: 'merge',\r\n      });\r\n    });\r\n    this.loadAll();\r\n    this.changedUser();\r\n  }\r\n\r\n  loadAll() {\r\n    const page = this.route.snapshot.queryParamMap.get('page');\r\n    const size = this.route.snapshot.queryParamMap.get('size');\r\n    const userName = this.route.snapshot.queryParamMap.get('userName');\r\n    const queries = {};\r\n    if (page) {\r\n      queries['page'] = +page + 1;\r\n    }\r\n    if (size) {\r\n      queries['size'] = size;\r\n    }\r\n    if (userName) {\r\n      queries['query'] = userName;\r\n    }\r\n    this.userService.query(queries).subscribe((users: HttpResponse<any>) => {\r\n      this.total = users.body.total;\r\n      this.pageSize = users.body.per_page;\r\n      this.dataSource = users.body.data;\r\n    });\r\n  }\r\n\r\n  changedUser() {\r\n    this.eventSubscriber = this.eventManager.subscribe('userListModification',\r\n      () => {\r\n        this.loadAll();\r\n      });\r\n  }\r\n\r\n  openEditDialog(user) {\r\n    const queryParams = {\r\n      id: user.id\r\n    };\r\n    this.router.navigate(['', { outlets: { popup: 'user/edit/' + user.id }}], {\r\n      relativeTo: this.route, queryParams,\r\n      queryParamsHandling: 'preserve',\r\n    });\r\n  }\r\n  openDeleteDialog(user) {\r\n    const queryParams = {\r\n      id: user.id\r\n    };\r\n    this.router.navigate(['', { outlets: { popup: 'user/delete/' + user.id }}], {\r\n      relativeTo: this.route, queryParams,\r\n      queryParamsHandling: 'preserve',\r\n    });\r\n  }\r\n\r\n\r\n  pageChanged(event) {\r\n    const queryParams = {\r\n      page: event.pageIndex,\r\n      size: event.pageSize,\r\n    };\r\n    this.router.navigate([], {\r\n      relativeTo: this.route, queryParams,\r\n      queryParamsHandling: 'merge',\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"<h3 mat-dialog-title class=\\\"dialog-title\\\">{{title | translate}}</h3>\\r\\n<form name=\\\"editForm\\\" role=\\\"form\\\" novalidate (ngSubmit)=\\\"save()\\\" #editForm=\\\"ngForm\\\">\\r\\n  <div mat-dialog-content>\\r\\n    <div fxLayout=\\\"column\\\" class=\\\"mat-form mat-form-sm\\\">\\r\\n      <mat-form-field>\\r\\n        <input matInput [placeholder]=\\\"'user.form.login'|translate\\\" name=\\\"login\\\" [(ngModel)]=\\\"entity.login\\\" required>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field>\\r\\n        <input matInput type=\\\"email\\\" placeholder=\\\"Email\\\" name=\\\"email\\\" [(ngModel)]=\\\"entity.email\\\">\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field>\\r\\n        <input matInput [placeholder]=\\\"'user.form.fullName'|translate\\\" name=\\\"name\\\" [(ngModel)]=\\\"entity.fullName\\\" required>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field>\\r\\n        <input matInput [placeholder]=\\\"'user.form.telephone'|translate\\\" name=\\\"phone\\\" [(ngModel)]=\\\"entity.phone\\\">\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field>\\r\\n        <input matInput type=\\\"date\\\" [placeholder]=\\\"'global.birthday'|translate\\\" name=\\\"birthday\\\" [(ngModel)]=\\\"entity.birthday\\\">\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field>\\r\\n        <mat-select [placeholder]=\\\"'user.form.role'|translate\\\" name=\\\"roleName\\\" required>\\r\\n          <mat-option *ngFor=\\\"let item of roles$|async\\\" [value]=\\\"item.id\\\">{{item.name}}</mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field>\\r\\n        <mat-select [placeholder]=\\\"'user.form.country'|translate\\\" name=\\\"country\\\" required>\\r\\n          <mat-option *ngFor=\\\"let item of countries$|async\\\" [value]=\\\"item.id\\\">{{item.name}}</mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field>\\r\\n        <mat-select [placeholder]=\\\"'user.form.city'|translate\\\" name=\\\"city\\\" required>\\r\\n          <mat-option *ngFor=\\\"let item of cities$|async\\\" [value]=\\\"item.id\\\">{{item.name}}</mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field>\\r\\n        <mat-select [placeholder]=\\\"'user.form.district'|translate\\\" name=\\\"district\\\" required>\\r\\n          <mat-option *ngFor=\\\"let item of districts$|async\\\" [value]=\\\"item.id\\\">{{item.name}}</mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field>\\r\\n        <mat-select [placeholder]=\\\"'user.form.ward'|translate\\\" name=\\\"ward\\\" required>\\r\\n          <mat-option *ngFor=\\\"let item of wards$|async\\\" [value]=\\\"item.id\\\">{{item.name}}</mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field>\\r\\n        <input matInput [placeholder]=\\\"'user.form.address'|translate\\\" name=\\\"addressName\\\" [(ngModel)]=\\\"entity.addressName\\\">\\r\\n      </mat-form-field>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n  <div mat-dialog-actions>\\r\\n    <button mat-raised-button mat-dialog-close (click)=\\\"clear()\\\">{{'global.cancel'|translate}}</button>\\r\\n    <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"editForm.form.invalid\\\">\\r\\n      {{ 'entity.action.save' | translate }}\\r\\n    </button>\\r\\n  </div>\\r\\n</form>\\r\\n\"","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Data, Router } from '@angular/router';\r\n\r\nimport { Principal } from '../../../core';\r\nimport { JhiAlertService } from 'ng-jhipster';\r\nimport { MatDialog, MatDialogRef, MatSelect } from '@angular/material';\r\nimport { IUser, User } from '../user.model';\r\nimport { UserService } from '../user.service';\r\nimport { EMPTY, Observable } from 'rxjs';\r\nimport { IRole, RoleService } from '../../role';\r\nimport { AddressService, CityService, IAddress, ICity, ICountry, IDistrict, IWard } from '../../address';\r\nimport { map } from 'rxjs/operators';\r\nimport { CountryService } from '../../address/country.service';\r\nimport { DistrictService } from '../../address/district.service';\r\nimport { WardService } from '../../address/ward.service';\r\nimport { isObject } from 'util';\r\nimport { FilterOperator } from 'src/app/shared';\r\n\r\n@Component({\r\n  selector: 'app-user-update-dialog',\r\n  templateUrl: './user-update.component.html'\r\n})\r\nexport class UserUpdateDialogComponent implements OnInit {\r\n  title: string;\r\n  currentAccount: IUser;\r\n  editMode: boolean;\r\n  entity: IUser;\r\n  roles$: Observable<IRole[]>;\r\n  addresses$: Observable<IAddress[]>;\r\n  countries$: Observable<ICountry[]>;\r\n  cities$: Observable<ICity[]>;\r\n  districts$: Observable<IDistrict[]>;\r\n  wards$: Observable<IWard[]>;\r\n  @ViewChild('allSelected') private allSelected: MatSelect;\r\n  constructor(\r\n    private dialogRef: MatDialogRef<UserUpdateDialogComponent>,\r\n    private principal: Principal,\r\n    private service: UserService,\r\n    private roleService: RoleService,\r\n    private addressService: AddressService,\r\n    private countryService: CountryService,\r\n    private cityService: CityService,\r\n    private districtService: DistrictService,\r\n    private wardService: WardService,\r\n  ) {\r\n    this.title = 'user.createLabel';\r\n    this.entity = new User();\r\n    this.roles$ = EMPTY;\r\n    this.addresses$ = EMPTY;\r\n    this.countries$ = EMPTY;\r\n    this.cities$ = EMPTY;\r\n    this.districts$ = EMPTY;\r\n    this.wards$ = EMPTY;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.principal.identity().then(account => {\r\n      this.currentAccount = account;\r\n    });\r\n\r\n    this.roles$ = this.roleService.list().pipe(\r\n      map((res) => res.body),\r\n    );\r\n    this.addresses$ = this.addressService.list().pipe(\r\n      map((res) => res.body),\r\n    );\r\n    this.countries$ = this.countryService.list().pipe(\r\n      map((res) => res.body),\r\n    );\r\n\r\n    if (this.entity.id !== null) {\r\n      this.title = 'user.updateLabel';\r\n    }\r\n  }\r\n\r\n  clear() {\r\n    this.dialogRef.close('cancel');\r\n  }\r\n\r\n  save() {\r\n    if (this.entity.id !== null) {\r\n      this.service.update(this.entity).subscribe(() => this.onSaveSuccess(), () => this.onSaveError());\r\n    } else {\r\n      this.service.create(this.entity).subscribe(() => this.onSaveSuccess(), () => this.onSaveError());\r\n    }\r\n  }\r\n\r\n  private onSaveSuccess() {\r\n    this.dialogRef.close(true);\r\n  }\r\n\r\n  private onSaveError() {\r\n  }\r\n\r\n   /** Change option template for Selects */\r\n   optionLabel(item) { return item.name; }\r\n\r\n   /**\r\n   * Get cities by country id change event\r\n   *\r\n   * @param {*} countryId\r\n   * @returns\r\n   * @memberof EquipmentFormComponent\r\n   */\r\n  onCountryChange(countryId) {\r\n    this.entity.cityId = null;\r\n    this.cities$ = null;\r\n    this.entity.districtId = null;\r\n    this.districts$ = null;\r\n    this.entity.wardId = null;\r\n    this.wards$ = null;\r\n    if (!countryId || countryId === 'null') {\r\n      return;\r\n    }\r\n    const req = {};\r\n    req[`countryId.${FilterOperator.equals}`] = countryId;\r\n    req['size'] = 100;\r\n    this.cities$ = this.cityService.list(req).pipe(\r\n      map((res) => res.body),\r\n    );\r\n  }\r\n\r\n   /**\r\n   * Get districts by city id change event\r\n   *\r\n   * @param {*} cityId\r\n   * @returns\r\n   * @memberof EquipmentFormComponent\r\n   */\r\n  onCityChange(cityId) {\r\n    this.entity.districtId = null;\r\n    this.districts$ = null;\r\n    this.entity.wardId = null;\r\n    this.wards$ = null;\r\n    if (!cityId || cityId === 'null') {\r\n      return;\r\n    }\r\n    const req = {};\r\n    req[`cityId.${FilterOperator.equals}`] = cityId;\r\n    req['size'] = 100;\r\n    this.districts$ = this.districtService.list(req).pipe(\r\n      map((res) => res.body),\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get wards by district id change event\r\n   *\r\n   * @param {*} districtId\r\n   * @returns\r\n   * @memberof EquipmentFormComponent\r\n   */\r\n  onDistrictChange(districtId) {\r\n    this.entity.wardId = null;\r\n    this.wards$ = null;\r\n    if (!districtId || districtId === 'null') {\r\n      return;\r\n    }\r\n    const req = {};\r\n    req[`districtId.${FilterOperator.equals}`] = districtId;\r\n    req['size'] = 100;\r\n    this.wards$ = this.wardService.list(req).pipe(\r\n      map((res) => res.body),\r\n    );\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-user-update-popup',\r\n  template: ''\r\n})\r\nexport class UserUpdatePopupComponent implements OnInit, OnDestroy {\r\n  private dialogRef: MatDialogRef<UserUpdateDialogComponent>;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private alertService: JhiAlertService,\r\n    private dialog: MatDialog,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.data.subscribe(({ entity }: Data) => {\r\n      setTimeout(() => {\r\n        this.dialogRef = this.dialog.open(UserUpdateDialogComponent, {\r\n          disableClose: true,\r\n          width: '500px',\r\n        });\r\n        this.dialogRef.componentInstance.entity = new User().assign(entity);\r\n        this.dialogRef.afterClosed().subscribe((result) => this.previousState(result), (reason) => this.previousState(reason));\r\n      });\r\n    });\r\n  }\r\n\r\n  private onSuccess(res) {\r\n  }\r\n\r\n  private onError(error: any) {\r\n    this.alertService.error(error.error, error.message, null);\r\n  }\r\n\r\n  previousState(result?: any) {\r\n    const params: any = {};\r\n    if (result && isObject(result)) {\r\n      Object.assign(params, result);\r\n    }\r\n    this.router.navigate(['.'], {relativeTo: this.activatedRoute.parent, queryParams: params, queryParamsHandling: 'merge'});\r\n    this.dialogRef = null;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.dialogRef = null;\r\n  }\r\n}\r\n","import { Moment } from 'moment';\r\nimport { Address, IAddress } from '../address';\r\n\r\nexport interface IUser {\r\n  id?: any;\r\n  login?: string;\r\n  code?: string;\r\n  firstName?: string;\r\n  lastName?: string;\r\n  fullName?: string;\r\n  address?: IAddress|string;\r\n  addressId?: number;\r\n  addressName?: string;\r\n  countryId?: number;\r\n  cityId?: number;\r\n  districtId?: number;\r\n  wardId?: number;\r\n  birthday?: Moment;\r\n  phone?: string;\r\n  email?: string;\r\n  activated?: boolean;\r\n  langKey?: string;\r\n  role?: string;\r\n  scope?: string;\r\n  authorities?: any[];\r\n  createdBy?: string;\r\n  createdDate?: Date;\r\n  lastModifiedBy?: string;\r\n  lastModifiedDate?: Date;\r\n  password?: string;\r\n  userDetailId?: string;\r\n  avatar?: string;\r\n  roleId?: string;\r\n  gender?: number;\r\n}\r\n\r\nexport class User implements IUser {\r\n  constructor(\r\n    public id?: any,\r\n    public login?: string,\r\n    public code?: string,\r\n    public firstName?: string,\r\n    public lastName?: string,\r\n    public fullName?: string,\r\n    public address?: IAddress|string,\r\n    public addressId?: number,\r\n    public addressName?: string,\r\n    public countryId?: number,\r\n    public cityId?: number,\r\n    public districtId?: number,\r\n    public wardId?: number,\r\n    public birthday?: Moment,\r\n    public phone?: string,\r\n    public email?: string,\r\n    public activated?: boolean,\r\n    public langKey?: string,\r\n    public role?: string,\r\n    public scope?: string,\r\n    public authorities?: any[],\r\n    public createdBy?: string,\r\n    public createdDate?: Date,\r\n    public lastModifiedBy?: string,\r\n    public lastModifiedDate?: Date,\r\n    public password?: string,\r\n    public userDetailId?: string,\r\n    public avatar?: string,\r\n    public roleId?: string,\r\n    public gender?: number,\r\n  ) {\r\n    this.id = id ? id : null;\r\n    this.login = login ? login : null;\r\n    this.code = code ? code : null;\r\n    this.firstName = firstName ? firstName : null;\r\n    this.lastName = lastName ? lastName : null;\r\n    this.fullName = fullName ? fullName : null;\r\n    this.address = address ? address : new Address();\r\n    this.addressId = addressId ? addressId : null;\r\n    this.addressName = addressName ? addressName : null;\r\n    this.countryId = countryId ? countryId : null;\r\n    this.cityId = cityId ? cityId : null;\r\n    this.districtId = districtId ? districtId : null;\r\n    this.wardId = wardId ? wardId : null;\r\n    this.birthday = birthday ? birthday : null;\r\n    this.phone = phone ? phone : null;\r\n    this.email = email ? email : null;\r\n    this.activated = activated ? activated : false;\r\n    this.langKey = langKey ? langKey : null;\r\n    this.authorities = authorities ? authorities : null;\r\n    this.createdBy = createdBy ? createdBy : null;\r\n    this.createdDate = createdDate ? createdDate : null;\r\n    this.lastModifiedBy = lastModifiedBy ? lastModifiedBy : null;\r\n    this.lastModifiedDate = lastModifiedDate ? lastModifiedDate : null;\r\n    this.password = password ? password : null;\r\n    this.userDetailId = userDetailId ? userDetailId : null;\r\n    this.avatar = avatar ? avatar : null;\r\n    this.roleId = roleId ? roleId : null;\r\n    this.gender = gender ? gender : 1;\r\n  }\r\n\r\n  assign(props?: IUser) {\r\n    if (props) {\r\n      for (const i in props) {\r\n        if (typeof this[i] !== 'undefined') {\r\n          this[i] = props[i];\r\n        }\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { ActivatedRouteSnapshot, CanActivate, Resolve, RouterStateSnapshot, Routes } from '@angular/router';\r\nimport { JhiResolvePagingParams } from 'ng-jhipster';\r\nimport { of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { IUser, User } from './user.model';\r\nimport { UserService } from './user.service';\r\nimport { UserListComponent } from './user-list/user-list.component';\r\nimport { UserUpdatePopupComponent } from './user-update/user-update.component';\r\nimport { UserDeletePopupComponent } from './user-delete-dialog/user-delete-dialog.component';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class UserResolve implements Resolve<IUser> {\r\n  constructor(private service: UserService) {\r\n  }\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    const id = route.params['login'] ? route.params['login'] : null;\r\n    if (id) {\r\n      return this.service.find(id).pipe(map((user: HttpResponse<User>) => user.body));\r\n    }\r\n    return of(new User());\r\n  }\r\n}\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class UserManagementResolve implements Resolve<IUser> {\r\n  constructor(private service: UserService) {\r\n  }\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    const id = route.params['login'] ? route.params['login'] : null;\r\n    if (id) {\r\n      return this.service.find(id).pipe(map((user: HttpResponse<User>) => user.body));\r\n    }\r\n    return of(new User());\r\n  }\r\n}\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class UserAuthoritiesResolve implements Resolve<string[]> {\r\n  constructor(private service: UserService) {\r\n  }\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    return this.service.authorities();\r\n  }\r\n}\r\n\r\nexport const userRoutes: Routes = [\r\n  {\r\n    path: 'user',\r\n    component: UserListComponent,\r\n    resolve: {\r\n      pagingParams: JhiResolvePagingParams,\r\n    },\r\n    data: {\r\n      pageTitle: 'Account list',\r\n      defaultSort: 'id,asc'\r\n    },\r\n    children: [\r\n      {\r\n        path: 'new',\r\n        component: UserUpdatePopupComponent,\r\n        resolve: {\r\n          entity: UserResolve,\r\n        },\r\n        data: {\r\n          authorities: ['can_user', 'can_create_user'],\r\n          pageTitle: 'Create user'\r\n        },\r\n      },\r\n      {\r\n        path: 'edit/:login',\r\n        component: UserUpdatePopupComponent,\r\n        resolve: {\r\n          entity: UserResolve,\r\n        },\r\n        data: {\r\n          authorities: ['can_user', 'can_update_user'],\r\n          pageTitle: 'Update user'\r\n        },\r\n      },\r\n      {\r\n        path: 'delete/:login',\r\n        component: UserDeletePopupComponent,\r\n        resolve: {\r\n          entity: UserResolve\r\n        },\r\n        data: {\r\n          authorities: ['can_user', 'can_delete_user'],\r\n          pageTitle: 'Delete user'\r\n        },\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport * as moment from 'moment';\r\nimport { DATE_FORMAT } from '../../shared/constants/input.constants';\r\nimport { createRequestOption } from '../../shared/utils';\r\nimport { IUser } from './user.model';\r\nimport { environment } from '../../../environments/environment';\r\n\r\ntype EntityResponseType = HttpResponse<IUser>;\r\ntype EntityArrayResponseType = HttpResponse<IUser[]>;\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class UserService {\r\n  private resourceUrl = environment.apiUrl + '/users';\r\n  private resourceSearchUrl = environment.apiUrl + '/_search/users';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  create(user: IUser): Observable<HttpResponse<IUser>> {\r\n    const copy = this.convertDateFromClient(user);\r\n    return this.http.post<IUser>(this.resourceUrl, copy, {observe: 'response'})\r\n      .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\r\n  }\r\n\r\n  update(user: IUser): Observable<HttpResponse<IUser>> {\r\n    const copy = this.convertDateFromClient(user);\r\n    return this.http.put<IUser>(this.resourceUrl + '/' + user.id, copy, {observe: 'response'})\r\n      .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\r\n  }\r\n\r\n  find(login: string): Observable<HttpResponse<IUser>> {\r\n    return this.http.get<IUser>(`${this.resourceUrl}/${login}`, {observe: 'response'})\r\n      .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\r\n  }\r\n\r\n  query(req?: any): Observable<HttpResponse<IUser[]>> {\r\n    const options = createRequestOption(req);\r\n    return this.http.get<IUser[]>(this.resourceUrl, {params: options, observe: 'response'})\r\n      .pipe(map((res: EntityArrayResponseType) => this.convertDateArrayFromServer(res)));\r\n  }\r\n\r\n  search(req?: any): Observable<EntityArrayResponseType> {\r\n    const options = createRequestOption(req);\r\n    return this.http.get<IUser[]>(this.resourceSearchUrl, {params: options, observe: 'response'});\r\n  }\r\n\r\n  delete(login: string): Observable<HttpResponse<any>> {\r\n    return this.http.delete(`${this.resourceUrl}/${login}`, {observe: 'response'});\r\n  }\r\n\r\n  authorities(): Observable<string[]> {\r\n    return this.http.get<string[]>(environment.apiUrl + '/users/authorities');\r\n  }\r\n\r\n  private convertDateFromClient(user: IUser): IUser {\r\n    const copy: IUser = Object.assign({}, user, {\r\n      birthday: user.birthday != null && user.birthday.isValid() ? user.birthday.format(DATE_FORMAT) : null\r\n    });\r\n    return copy;\r\n  }\r\n\r\n  private convertDateFromServer(res: EntityResponseType): EntityResponseType {\r\n    res.body.birthday = res.body.birthday != null ? moment(res.body.birthday) : null;\r\n    return res;\r\n  }\r\n\r\n  private convertDateArrayFromServer(res: EntityArrayResponseType): EntityArrayResponseType {\r\n    if (res.body.length > 0) {\r\n      res.body.forEach((user: IUser) => {\r\n        user.birthday = user.birthday != null ? moment(user.birthday) : null;\r\n      });\r\n    }\r\n    return res;\r\n  }\r\n}\r\n"],"sourceRoot":""}